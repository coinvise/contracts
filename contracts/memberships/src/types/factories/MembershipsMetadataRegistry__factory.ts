/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MembershipsMetadataRegistry, MembershipsMetadataRegistryInterface } from "../MembershipsMetadataRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_membershipsProxy",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105098061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063d8a73fdb11610050578063d8a73fdb14610096578063ea6bc00c146100a9578063f2fde38b146100c957600080fd5b8063715018a61461006c5780638da5cb5b14610076575b600080fd5b6100746100dc565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100746100a43660046103c7565b6100f0565b6100bc6100b736600461044a565b610121565b60405161008d919061046c565b6100746100d736600461044a565b6101bb565b6100e4610250565b6100ee60006102aa565b565b6100f8610250565b6001600160a01b038316600090815260016020526040902061011b908383610312565b50505050565b6001602052600090815260409020805461013a906104c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610166906104c1565b80156101b35780601f10610188576101008083540402835291602001916101b3565b820191906000526020600020905b81548152906001019060200180831161019657829003601f168201915b505050505081565b6101c3610250565b6001600160a01b0381166102445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61024d816102aa565b50565b6000546001600160a01b031633146100ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161023b565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461031e906104c1565b90600052602060002090601f0160209004810192826103405760008555610386565b82601f106103595782800160ff19823516178555610386565b82800160010185558215610386579182015b8281111561038657823582559160200191906001019061036b565b50610392929150610396565b5090565b5b808211156103925760008155600101610397565b80356001600160a01b03811681146103c257600080fd5b919050565b6000806000604084860312156103dc57600080fd5b6103e5846103ab565b9250602084013567ffffffffffffffff8082111561040257600080fd5b818601915086601f83011261041657600080fd5b81358181111561042557600080fd5b87602082850101111561043757600080fd5b6020830194508093505050509250925092565b60006020828403121561045c57600080fd5b610465826103ab565b9392505050565b600060208083528351808285015260005b818110156104995785810183015185820160400152820161047d565b818111156104ab576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806104d557607f821691505b602082108114156104f657634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c6343000809000a";

type MembershipsMetadataRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MembershipsMetadataRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MembershipsMetadataRegistry__factory extends ContractFactory {
  constructor(...args: MembershipsMetadataRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MembershipsMetadataRegistry> {
    return super.deploy(overrides || {}) as Promise<MembershipsMetadataRegistry>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MembershipsMetadataRegistry {
    return super.attach(address) as MembershipsMetadataRegistry;
  }
  connect(signer: Signer): MembershipsMetadataRegistry__factory {
    return super.connect(signer) as MembershipsMetadataRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipsMetadataRegistryInterface {
    return new utils.Interface(_abi) as MembershipsMetadataRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MembershipsMetadataRegistry {
    return new Contract(address, _abi, signerOrProvider) as MembershipsMetadataRegistry;
  }
}
