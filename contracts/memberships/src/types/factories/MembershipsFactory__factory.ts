/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, BigNumberish, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MembershipsFactory, MembershipsFactoryInterface } from "../MembershipsFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_feeBPS",
        type: "uint16",
      },
      {
        internalType: "address payable",
        name: "_feeTreasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidFeeTreasury",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMemberships",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "currentVersion",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "upgradeToVersion",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "membershipsLatestVersion",
        type: "uint16",
      },
    ],
    name: "InvalidUpgrade",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "oldFeeBPS",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "newFeeBPS",
        type: "uint16",
      },
    ],
    name: "FeeBPSSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldFeeTreasury",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newFeeTreasury",
        type: "address",
      },
    ],
    name: "FeeTreasurySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "membershipsProxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "MembershipsDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "MembershipsImplSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cap",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "airdropToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "airdropAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IMemberships.Membership",
        name: "_membership",
        type: "tuple",
      },
    ],
    name: "deployMemberships",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_version",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cap",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "airdropToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "airdropAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IMemberships.Membership",
        name: "_membership",
        type: "tuple",
      },
    ],
    name: "deployMembershipsAtVersion",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBPS",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTreasury",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_version",
        type: "uint16",
      },
    ],
    name: "membershipsImpls",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "membershipsLatestVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_feeBPS",
        type: "uint16",
      },
    ],
    name: "setFeeBPS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_feeTreasury",
        type: "address",
      },
    ],
    name: "setFeeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_version",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_memberships",
        type: "address",
      },
    ],
    name: "setMembershipsImplAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_version",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_membershipsProxy",
        type: "address",
      },
    ],
    name: "upgradeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611fb9380380611fb983398101604081905261002f916100f6565b610038336100a6565b6001600160a01b03811661005f5760405163775d9f7b60e11b815260040160405180910390fd5b6000805461ffff909316600160a01b0261ffff60a01b1990931692909217909155600180546001600160a01b039092166001600160a01b0319909216919091179055610143565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561010957600080fd5b825161ffff8116811461011b57600080fd5b60208401519092506001600160a01b038116811461013857600080fd5b809150509250929050565b611e67806101526000396000f3fe60806040523480156200001157600080fd5b5060043610620000f15760003560e01c806396a441501162000097578063b2b023b1116200006e578063b2b023b114620001f3578063bfa37e37146200020a578063eeedcd4d1462000221578063f2fde38b146200023857600080fd5b806396a4415014620001b65780639bbf1fbc14620001cd578063a506f2f914620001dc57600080fd5b806360dc234011620000cc57806360dc23401462000186578063715018a6146200019a5780638da5cb5b14620001a457600080fd5b80631a1c6e5314620000f657806332fe332e14620001245780634874fbf6146200013d575b600080fd5b6000546200010c90600160a01b900461ffff1681565b60405161ffff90911681526020015b60405180910390f35b6200013b6200013536600462000d08565b6200024f565b005b6200016d6200014e36600462000d46565b61ffff166000908152600260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016200011b565b6001546200016d906001600160a01b031681565b6200013b62000317565b6000546001600160a01b03166200016d565b6200013b620001c736600462000d46565b6200032f565b6003546200010c9061ffff1681565b6200016d620001ed36600462000ea5565b620003be565b6200013b6200020436600462000d08565b620003e9565b6200013b6200021b36600462000f99565b62000605565b6200016d6200023236600462000fb9565b620006a0565b6200013b6200024936600462000f99565b62000852565b62000259620008e8565b6001600160a01b038116620002805760405162f55bf760e71b815260040160405180910390fd5b6040516001600160a01b0382169061ffff8416907f869dc15859e408b90ee78d738725eda142ded9d2f1e83585d61e22e84d574b5490600090a361ffff8281166000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055600354909116101562000313576003805461ffff191661ffff84161790555b5050565b62000321620008e8565b6200032d600062000944565b565b62000339620008e8565b6000546040805161ffff600160a01b9093048316815291831660208301527f6622d716319eccda31643f975450e730efdee59276a2c5ff4de9bd2d41ca285d910160405180910390a16000805461ffff909216600160a01b027fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6003546000908190620003dc9061ffff168a8a8a8a8a8a8a620006a0565b9998505050505050505050565b806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200042357600080fd5b505afa15801562000438573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200045e9190620010bf565b6001600160a01b0316336001600160a01b0316146200048f576040516282b42960e81b815260040160405180910390fd5b6000816001600160a01b03166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b158015620004cb57600080fd5b505afa158015620004e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005069190620010df565b90508061ffff168361ffff1611158062000529575060035461ffff908116908416115b15620005675760035460405163d7d6229160e01b815261ffff8084166004830152808616602483015290911660448201526064015b60405180910390fd5b61ffff83166000908152600260205260409020546001600160a01b031680620005a25760405162f55bf760e71b815260040160405180910390fd5b6040516316b8f5f360e31b81526001600160a01b03828116600483015284169063b5c7af9890602401600060405180830381600087803b158015620005e657600080fd5b505af1158015620005fb573d6000803e3d6000fd5b5050505050505050565b6200060f620008e8565b6001600160a01b038116620006375760405163775d9f7b60e11b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f73636aca58edf405ffef4f93ebfa22096ce8c7c2a12a70f00c3872fb36741b4390600090a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61ffff88166000908152600260205260408120546001600160a01b031680620006db5760405162f55bf760e71b815260040160405180910390fd5b60008a8263d4142bdf60e01b8c8c8c8c8c8c8c6040516024016200070697969594939291906200115c565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051620007729062000cb4565b62000780939291906200121d565b604051809103906000f0801580156200079d573d6000803e3d6000fd5b5060808501519091506001600160a01b031615801590620007c1575060a084015115155b15620007fa57620007fa338286606001518760a00151620007e3919062001254565b60808801516001600160a01b0316929190620009a1565b816001600160a01b03168a6001600160a01b0316826001600160a01b03167f6b2f171a69e72520edfd7b30039410074bb77bee912ad5b2b03cb503bad294d560405160405180910390a49a9950505050505050505050565b6200085c620008e8565b6001600160a01b038116620008da5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016200055e565b620008e58162000944565b50565b6000546001600160a01b031633146200032d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200055e565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905262000a1290859062000a18565b50505050565b600062000a6f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662000b099092919063ffffffff16565b80519091501562000b04578080602001905181019062000a90919062001282565b62000b045760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016200055e565b505050565b606062000b1a848460008562000b24565b90505b9392505050565b60608247101562000b9e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016200055e565b6001600160a01b0385163b62000bf75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200055e565b600080866001600160a01b0316858760405162000c159190620012a6565b60006040518083038185875af1925050503d806000811462000c54576040519150601f19603f3d011682016040523d82523d6000602084013e62000c59565b606091505b509150915062000c6b82828662000c76565b979650505050505050565b6060831562000c8757508162000b1d565b82511562000c985782518084602001fd5b8160405162461bcd60e51b81526004016200055e9190620012c4565b610b8180620012da83390190565b61ffff81168114620008e557600080fd5b803562000ce08162000cc2565b919050565b6001600160a01b0381168114620008e557600080fd5b803562000ce08162000ce5565b6000806040838503121562000d1c57600080fd5b823562000d298162000cc2565b9150602083013562000d3b8162000ce5565b809150509250929050565b60006020828403121562000d5957600080fd5b813562000b1d8162000cc2565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262000d8e57600080fd5b813567ffffffffffffffff8082111562000dac5762000dac62000d66565b604051601f8301601f19908116603f0116810190828211818310171562000dd75762000dd762000d66565b8160405283815286602085880101111562000df157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060c0828403121562000e2457600080fd5b60405160c0810181811067ffffffffffffffff8211171562000e4a5762000e4a62000d66565b604052905080823562000e5d8162000ce5565b80825250602083013560208201526040830135604082015260608301356060820152608083013562000e8f8162000ce5565b608082015260a092830135920191909152919050565b6000806000806000806000610180888a03121562000ec257600080fd5b62000ecd8862000cfb565b965062000edd6020890162000cfb565b9550604088013567ffffffffffffffff8082111562000efb57600080fd5b62000f098b838c0162000d7c565b965060608a013591508082111562000f2057600080fd5b62000f2e8b838c0162000d7c565b955060808a013591508082111562000f4557600080fd5b62000f538b838c0162000d7c565b945060a08a013591508082111562000f6a57600080fd5b5062000f798a828b0162000d7c565b92505062000f8b8960c08a0162000e11565b905092959891949750929550565b60006020828403121562000fac57600080fd5b813562000b1d8162000ce5565b6000806000806000806000806101a0898b03121562000fd757600080fd5b62000fe28962000cd3565b975062000ff260208a0162000cfb565b96506200100260408a0162000cfb565b9550606089013567ffffffffffffffff808211156200102057600080fd5b6200102e8c838d0162000d7c565b965060808b01359150808211156200104557600080fd5b620010538c838d0162000d7c565b955060a08b01359150808211156200106a57600080fd5b620010788c838d0162000d7c565b945060c08b01359150808211156200108f57600080fd5b506200109e8b828c0162000d7c565b925050620010b08a60e08b0162000e11565b90509295985092959890939650565b600060208284031215620010d257600080fd5b815162000b1d8162000ce5565b600060208284031215620010f257600080fd5b815162000b1d8162000cc2565b60005b838110156200111c57818101518382015260200162001102565b8381111562000a125750506000910152565b6000815180845262001148816020860160208601620010ff565b601f01601f19169290920160200192915050565b60006101806001600160a01b03808b168452808a1660208501528160408501526200118a8285018a6200112e565b91508382036060850152620011a082896200112e565b91508382036080850152620011b682886200112e565b915083820360a0850152620011cc82876200112e565b92508085511660c0850152602085015160e08501526040850151610100850152606085015161012085015280608086015116610140850152505060a083015161016083015298975050505050505050565b61ffff841681526001600160a01b03831660208201526060604082015260006200124b60608301846200112e565b95945050505050565b60008160001904831182151516156200127d57634e487b7160e01b600052601160045260246000fd5b500290565b6000602082840312156200129557600080fd5b8151801515811462000b1d57600080fd5b60008251620012ba818460208701620010ff565b9190910192915050565b60208152600062000b1d60208301846200112e56fe60806040523480156200001157600080fd5b5060405162000b8138038062000b8183398101604081905262000034916200049e565b818162000044828260006200017f565b5062000074905060017f1ad0e7da7a8ae5b58d3a6900c5b9701c3c2713e4e7cef4d5a30267fc422c630262000586565b7f1ad0e7da7a8ae5b58d3a6900c5b9701c3c2713e4e7cef4d5a30267fc422c630114620000a557620000a5620005ac565b60405163243a7dfb60e11b815261ffff841660048201526001600160a01b038316903390634874fbf69060240160206040518083038186803b158015620000eb57600080fd5b505afa15801562000100573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001269190620005c2565b6001600160a01b0316146200014d5760405162f55bf760e71b815260040160405180910390fd5b62000176337f1ad0e7da7a8ae5b58d3a6900c5b9701c3c2713e4e7cef4d5a30267fc422c630155565b50505062000633565b6200018a83620001bc565b600082511180620001985750805b15620001b757620001b58383620001fe60201b6200015e1760201c565b505b505050565b620001c7816200022d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062000226838360405180606001604052806027815260200162000b5a6027913962000306565b9392505050565b6200024381620003ec60201b6200018a1760201c565b620002ab5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b80620002e57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620003fb60201b620001991760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b620003705760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620002a2565b600080856001600160a01b0316856040516200038d9190620005e0565b600060405180830381855af49150503d8060008114620003ca576040519150601f19603f3d011682016040523d82523d6000602084013e620003cf565b606091505b509092509050620003e2828286620003fe565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156200040f57508162000226565b825115620004205782518084602001fd5b8160405162461bcd60e51b8152600401620002a29190620005fe565b80516001600160a01b03811681146200045457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200048c57818101518382015260200162000472565b83811115620001b55750506000910152565b600080600060608486031215620004b457600080fd5b835161ffff81168114620004c757600080fd5b9250620004d7602085016200043c565b60408501519092506001600160401b0380821115620004f557600080fd5b818601915086601f8301126200050a57600080fd5b8151818111156200051f576200051f62000459565b604051601f8201601f19908116603f011681019083821181831017156200054a576200054a62000459565b816040528281528960208487010111156200056457600080fd5b620005778360208301602088016200046f565b80955050505050509250925092565b600082821015620005a757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b600060208284031215620005d557600080fd5b62000226826200043c565b60008251620005f48184602087016200046f565b9190910192915050565b60208152600082518060208401526200061f8160408501602087016200046f565b601f01601f19169190910160400192915050565b61051780620006436000396000f3fe6080604052600436106100385760003560e01c80632ba0fd071461004f578063b5c7af9814610080578063b88fe6a3146100a057610047565b36610047576100456100b5565b005b6100456100b5565b34801561005b57600080fd5b506100646100c7565b6040516001600160a01b03909116815260200160405180910390f35b34801561008c57600080fd5b5061004561009b36600461043b565b6100f6565b3480156100ac57600080fd5b50610064610154565b6100c56100c061019c565b6101cf565b565b60006100f17f1ad0e7da7a8ae5b58d3a6900c5b9701c3c2713e4e7cef4d5a30267fc422c63015490565b905090565b7f1ad0e7da7a8ae5b58d3a6900c5b9701c3c2713e4e7cef4d5a30267fc422c6301546001600160a01b0316336001600160a01b031614610148576040516282b42960e81b815260040160405180910390fd5b610151816101f3565b50565b60006100f161019c565b606061018383836040518060600160405280602781526020016104e460279139610233565b9392505050565b6001600160a01b03163b151590565b90565b60006100f17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b3660008037600080366000845af43d6000803e8080156101ee573d6000f35b3d6000fd5b6101fc8161032c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0384163b6102b75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600080856001600160a01b0316856040516102d29190610494565b600060405180830381855af49150503d806000811461030d576040519150601f19603f3d011682016040523d82523d6000602084013e610312565b606091505b5091509150610322828286610402565b9695505050505050565b6001600160a01b0381163b6103a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016102ae565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60608315610411575081610183565b8251156104215782518084602001fd5b8160405162461bcd60e51b81526004016102ae91906104b0565b60006020828403121561044d57600080fd5b81356001600160a01b038116811461018357600080fd5b60005b8381101561047f578181015183820152602001610467565b8381111561048e576000848401525b50505050565b600082516104a6818460208701610464565b9190910192915050565b60208152600082518060208401526104cf816040850160208701610464565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000809000a416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000809000a";

type MembershipsFactoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MembershipsFactoryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MembershipsFactory__factory extends ContractFactory {
  constructor(...args: MembershipsFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _feeBPS: BigNumberish,
    _feeTreasury: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MembershipsFactory> {
    return super.deploy(_feeBPS, _feeTreasury, overrides || {}) as Promise<MembershipsFactory>;
  }
  getDeployTransaction(
    _feeBPS: BigNumberish,
    _feeTreasury: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_feeBPS, _feeTreasury, overrides || {});
  }
  attach(address: string): MembershipsFactory {
    return super.attach(address) as MembershipsFactory;
  }
  connect(signer: Signer): MembershipsFactory__factory {
    return super.connect(signer) as MembershipsFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipsFactoryInterface {
    return new utils.Interface(_abi) as MembershipsFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MembershipsFactory {
    return new Contract(address, _abi, signerOrProvider) as MembershipsFactory;
  }
}
