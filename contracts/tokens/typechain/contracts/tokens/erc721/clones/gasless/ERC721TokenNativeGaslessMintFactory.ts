/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../common";

export interface ERC721TokenNativeGaslessMintFactoryInterface
  extends utils.Interface {
  functions: {
    "deployERC721Token(uint8,bytes,uint256)": FunctionFragment;
    "erc721SoulboundTokenImpl()": FunctionFragment;
    "erc721SoulboundTokenNativeGaslessMintImpl()": FunctionFragment;
    "erc721TokenImpl()": FunctionFragment;
    "erc721TokenNativeGaslessMintImpl()": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setERC721SoulboundTokenImplAddress(address)": FunctionFragment;
    "setERC721SoulboundTokenNativeGaslessMintImplAddress(address)": FunctionFragment;
    "setERC721TokenImplAddress(address)": FunctionFragment;
    "setERC721TokenNativeGaslessMintImplAddress(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "deployERC721Token"
      | "erc721SoulboundTokenImpl"
      | "erc721SoulboundTokenNativeGaslessMintImpl"
      | "erc721TokenImpl"
      | "erc721TokenNativeGaslessMintImpl"
      | "owner"
      | "renounceOwnership"
      | "setERC721SoulboundTokenImplAddress"
      | "setERC721SoulboundTokenNativeGaslessMintImplAddress"
      | "setERC721TokenImplAddress"
      | "setERC721TokenNativeGaslessMintImplAddress"
      | "transferOwnership"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "deployERC721Token",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "erc721SoulboundTokenImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "erc721SoulboundTokenNativeGaslessMintImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "erc721TokenImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "erc721TokenNativeGaslessMintImpl",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721SoulboundTokenImplAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721SoulboundTokenNativeGaslessMintImplAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721TokenImplAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721TokenNativeGaslessMintImplAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "deployERC721Token",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc721SoulboundTokenImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc721SoulboundTokenNativeGaslessMintImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc721TokenImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc721TokenNativeGaslessMintImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721SoulboundTokenImplAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721SoulboundTokenNativeGaslessMintImplAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721TokenImplAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721TokenNativeGaslessMintImplAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "ERC721SoulboundTokenImplSet(address,address)": EventFragment;
    "ERC721SoulboundTokenNativeGaslessMintImplSet(address,address)": EventFragment;
    "ERC721TokenDeployed(uint8,address,address,address)": EventFragment;
    "ERC721TokenImplSet(address,address)": EventFragment;
    "ERC721TokenNativeGaslessMintImplSet(address,address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "ERC721SoulboundTokenImplSet"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721SoulboundTokenNativeGaslessMintImplSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721TokenDeployed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721TokenImplSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721TokenNativeGaslessMintImplSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export interface ERC721SoulboundTokenImplSetEventObject {
  _oldERC721SoulboundTokenImpl: string;
  _newERC721SoulboundTokenImpl: string;
}
export type ERC721SoulboundTokenImplSetEvent = TypedEvent<
  [string, string],
  ERC721SoulboundTokenImplSetEventObject
>;

export type ERC721SoulboundTokenImplSetEventFilter =
  TypedEventFilter<ERC721SoulboundTokenImplSetEvent>;

export interface ERC721SoulboundTokenNativeGaslessMintImplSetEventObject {
  _oldERC721SoulboundTokenNativeGaslessMintImpl: string;
  _newERC721SoulboundTokenNativeGaslessMintImpl: string;
}
export type ERC721SoulboundTokenNativeGaslessMintImplSetEvent = TypedEvent<
  [string, string],
  ERC721SoulboundTokenNativeGaslessMintImplSetEventObject
>;

export type ERC721SoulboundTokenNativeGaslessMintImplSetEventFilter =
  TypedEventFilter<ERC721SoulboundTokenNativeGaslessMintImplSetEvent>;

export interface ERC721TokenDeployedEventObject {
  _tokenType: number;
  _erc721TokenClone: string;
  _creator: string;
  _erc721TokenImpl: string;
}
export type ERC721TokenDeployedEvent = TypedEvent<
  [number, string, string, string],
  ERC721TokenDeployedEventObject
>;

export type ERC721TokenDeployedEventFilter =
  TypedEventFilter<ERC721TokenDeployedEvent>;

export interface ERC721TokenImplSetEventObject {
  _oldERC721TokenImpl: string;
  _newERC721TokenImpl: string;
}
export type ERC721TokenImplSetEvent = TypedEvent<
  [string, string],
  ERC721TokenImplSetEventObject
>;

export type ERC721TokenImplSetEventFilter =
  TypedEventFilter<ERC721TokenImplSetEvent>;

export interface ERC721TokenNativeGaslessMintImplSetEventObject {
  _oldERC721TokenNativeGaslessMintImpl: string;
  _newERC721TokenNativeGaslessMintImpl: string;
}
export type ERC721TokenNativeGaslessMintImplSetEvent = TypedEvent<
  [string, string],
  ERC721TokenNativeGaslessMintImplSetEventObject
>;

export type ERC721TokenNativeGaslessMintImplSetEventFilter =
  TypedEventFilter<ERC721TokenNativeGaslessMintImplSetEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface ERC721TokenNativeGaslessMintFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ERC721TokenNativeGaslessMintFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    deployERC721Token(
      _tokenType: PromiseOrValue<BigNumberish>,
      _initializationData: PromiseOrValue<BytesLike>,
      _saltNonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    erc721SoulboundTokenImpl(overrides?: CallOverrides): Promise<[string]>;

    erc721SoulboundTokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<[string]>;

    erc721TokenImpl(overrides?: CallOverrides): Promise<[string]>;

    erc721TokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setERC721SoulboundTokenImplAddress(
      _erc721SoulboundTokenImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setERC721SoulboundTokenNativeGaslessMintImplAddress(
      _erc721SoulboundTokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setERC721TokenImplAddress(
      _erc721TokenImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setERC721TokenNativeGaslessMintImplAddress(
      _erc721TokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  deployERC721Token(
    _tokenType: PromiseOrValue<BigNumberish>,
    _initializationData: PromiseOrValue<BytesLike>,
    _saltNonce: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  erc721SoulboundTokenImpl(overrides?: CallOverrides): Promise<string>;

  erc721SoulboundTokenNativeGaslessMintImpl(
    overrides?: CallOverrides
  ): Promise<string>;

  erc721TokenImpl(overrides?: CallOverrides): Promise<string>;

  erc721TokenNativeGaslessMintImpl(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setERC721SoulboundTokenImplAddress(
    _erc721SoulboundTokenImpl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setERC721SoulboundTokenNativeGaslessMintImplAddress(
    _erc721SoulboundTokenNativeGaslessMintImpl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setERC721TokenImplAddress(
    _erc721TokenImpl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setERC721TokenNativeGaslessMintImplAddress(
    _erc721TokenNativeGaslessMintImpl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    deployERC721Token(
      _tokenType: PromiseOrValue<BigNumberish>,
      _initializationData: PromiseOrValue<BytesLike>,
      _saltNonce: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    erc721SoulboundTokenImpl(overrides?: CallOverrides): Promise<string>;

    erc721SoulboundTokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<string>;

    erc721TokenImpl(overrides?: CallOverrides): Promise<string>;

    erc721TokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setERC721SoulboundTokenImplAddress(
      _erc721SoulboundTokenImpl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setERC721SoulboundTokenNativeGaslessMintImplAddress(
      _erc721SoulboundTokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setERC721TokenImplAddress(
      _erc721TokenImpl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setERC721TokenNativeGaslessMintImplAddress(
      _erc721TokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ERC721SoulboundTokenImplSet(address,address)"(
      _oldERC721SoulboundTokenImpl?: null,
      _newERC721SoulboundTokenImpl?: null
    ): ERC721SoulboundTokenImplSetEventFilter;
    ERC721SoulboundTokenImplSet(
      _oldERC721SoulboundTokenImpl?: null,
      _newERC721SoulboundTokenImpl?: null
    ): ERC721SoulboundTokenImplSetEventFilter;

    "ERC721SoulboundTokenNativeGaslessMintImplSet(address,address)"(
      _oldERC721SoulboundTokenNativeGaslessMintImpl?: null,
      _newERC721SoulboundTokenNativeGaslessMintImpl?: null
    ): ERC721SoulboundTokenNativeGaslessMintImplSetEventFilter;
    ERC721SoulboundTokenNativeGaslessMintImplSet(
      _oldERC721SoulboundTokenNativeGaslessMintImpl?: null,
      _newERC721SoulboundTokenNativeGaslessMintImpl?: null
    ): ERC721SoulboundTokenNativeGaslessMintImplSetEventFilter;

    "ERC721TokenDeployed(uint8,address,address,address)"(
      _tokenType?: PromiseOrValue<BigNumberish> | null,
      _erc721TokenClone?: null,
      _creator?: PromiseOrValue<string> | null,
      _erc721TokenImpl?: PromiseOrValue<string> | null
    ): ERC721TokenDeployedEventFilter;
    ERC721TokenDeployed(
      _tokenType?: PromiseOrValue<BigNumberish> | null,
      _erc721TokenClone?: null,
      _creator?: PromiseOrValue<string> | null,
      _erc721TokenImpl?: PromiseOrValue<string> | null
    ): ERC721TokenDeployedEventFilter;

    "ERC721TokenImplSet(address,address)"(
      _oldERC721TokenImpl?: null,
      _newERC721TokenImpl?: null
    ): ERC721TokenImplSetEventFilter;
    ERC721TokenImplSet(
      _oldERC721TokenImpl?: null,
      _newERC721TokenImpl?: null
    ): ERC721TokenImplSetEventFilter;

    "ERC721TokenNativeGaslessMintImplSet(address,address)"(
      _oldERC721TokenNativeGaslessMintImpl?: null,
      _newERC721TokenNativeGaslessMintImpl?: null
    ): ERC721TokenNativeGaslessMintImplSetEventFilter;
    ERC721TokenNativeGaslessMintImplSet(
      _oldERC721TokenNativeGaslessMintImpl?: null,
      _newERC721TokenNativeGaslessMintImpl?: null
    ): ERC721TokenNativeGaslessMintImplSetEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    deployERC721Token(
      _tokenType: PromiseOrValue<BigNumberish>,
      _initializationData: PromiseOrValue<BytesLike>,
      _saltNonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    erc721SoulboundTokenImpl(overrides?: CallOverrides): Promise<BigNumber>;

    erc721SoulboundTokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    erc721TokenImpl(overrides?: CallOverrides): Promise<BigNumber>;

    erc721TokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setERC721SoulboundTokenImplAddress(
      _erc721SoulboundTokenImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setERC721SoulboundTokenNativeGaslessMintImplAddress(
      _erc721SoulboundTokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setERC721TokenImplAddress(
      _erc721TokenImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setERC721TokenNativeGaslessMintImplAddress(
      _erc721TokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    deployERC721Token(
      _tokenType: PromiseOrValue<BigNumberish>,
      _initializationData: PromiseOrValue<BytesLike>,
      _saltNonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    erc721SoulboundTokenImpl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    erc721SoulboundTokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    erc721TokenImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    erc721TokenNativeGaslessMintImpl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setERC721SoulboundTokenImplAddress(
      _erc721SoulboundTokenImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setERC721SoulboundTokenNativeGaslessMintImplAddress(
      _erc721SoulboundTokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setERC721TokenImplAddress(
      _erc721TokenImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setERC721TokenNativeGaslessMintImplAddress(
      _erc721TokenNativeGaslessMintImpl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
