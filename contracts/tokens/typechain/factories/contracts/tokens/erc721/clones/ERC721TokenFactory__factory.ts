/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721TokenFactory,
  ERC721TokenFactoryInterface,
} from "../../../../../contracts/tokens/erc721/clones/ERC721TokenFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721TokenImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721SoulboundTokenImpl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_oldERC721SoulboundTokenImpl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newERC721SoulboundTokenImpl",
        type: "address",
      },
    ],
    name: "ERC721SoulboundTokenImplSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ERC721TokenFactory.TokenType",
        name: "_tokenType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_erc721TokenClone",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc721TokenImpl",
        type: "address",
      },
    ],
    name: "ERC721TokenDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_oldERC721TokenImpl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newERC721TokenImpl",
        type: "address",
      },
    ],
    name: "ERC721TokenImplSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum ERC721TokenFactory.TokenType",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "_initializationData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_saltNonce",
        type: "uint256",
      },
    ],
    name: "deployERC721Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721SoulboundTokenImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721SoulboundTokenImpl",
        type: "address",
      },
    ],
    name: "setERC721SoulboundTokenImplAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721TokenImpl",
        type: "address",
      },
    ],
    name: "setERC721TokenImplAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161089638038061089683398101604081905261002f916100ed565b61003833610081565b8015821517156100505763e6c4247b6000526004601cfd5b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610120565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e857600080fd5b919050565b6000806040838503121561010057600080fd5b610109836100d1565b9150610117602084016100d1565b90509250929050565b6107678061012f6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610106578063da868dc214610124578063e2b5aad114610144578063f2fde38b1461016457600080fd5b80630e8a822b1461008057806344e2f1c5146100a2578063610304a4146100de578063715018a6146100f1575b600080fd5b34801561008c57600080fd5b506100a061009b366004610597565b610184565b005b3480156100ae57600080fd5b506002546100c2906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100c26100ec3660046105dd565b610207565b3480156100fd57600080fd5b506100a0610311565b34801561011257600080fd5b506000546001600160a01b03166100c2565b34801561013057600080fd5b506100a061013f366004610597565b610325565b34801561015057600080fd5b506001546100c2906001600160a01b031681565b34801561017057600080fd5b506100a061017f366004610597565b6103a8565b61018c61043d565b8061019f5763e6c4247b6000526004601cfd5b600280546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1983161790925560408051929091168083526020830184905291907f9367781c37dc381ab012632d88359dc932afe7feabe3bc1a25a1f244c7324d039082a1505050565b6000808085600181111561021d5761021d6106ae565b14610233576002546001600160a01b0316610240565b6001546001600160a01b03165b905060006102788233878760405160200161025d939291906106e8565b60405160208183030381529060405280519060200120610497565b9050806001600160a01b031663439fab9134876040518363ffffffff1660e01b81526004016102a79190610727565b6000604051808303818588803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b50505050506040518181528233887f23899f3b1fe55da77188b135df7513bf63e425a3958ee2866b3a19547c56effe602085a45095945050505050565b61031961043d565b610323600061053a565b565b61032d61043d565b806103405763e6c4247b6000526004601cfd5b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1983161790925560408051929091168083526020830184905291907fcbc745d8ffafdbb1db5af2ff6acd261357d2d6fa74ac0ea4389b92c8891a6bd89082a1505050565b6103b061043d565b6001600160a01b0381166104315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61043a8161053a565b50565b6000546001600160a01b031633146103235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610428565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166105345760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610428565b92915050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105a957600080fd5b81356001600160a01b03811681146105c057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156105f257600080fd5b83356002811061060157600080fd5b9250602084013567ffffffffffffffff8082111561061e57600080fd5b818601915086601f83011261063257600080fd5b813581811115610644576106446105c7565b604051601f8201601f19908116603f0116810190838211818310171561066c5761066c6105c7565b8160405282815289602084870101111561068557600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b60005b838110156106df5781810151838201526020016106c7565b50506000910152565b6bffffffffffffffffffffffff198460601b168152600083516107128160148501602088016106c4565b60149201918201929092526034019392505050565b60208152600082518060208401526107468160408501602087016106c4565b601f01601f1916919091016040019291505056fea164736f6c6343000813000a";

type ERC721TokenFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721TokenFactory__factory extends ContractFactory {
  constructor(...args: ERC721TokenFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc721TokenImpl: PromiseOrValue<string>,
    _erc721SoulboundTokenImpl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721TokenFactory> {
    return super.deploy(
      _erc721TokenImpl,
      _erc721SoulboundTokenImpl,
      overrides || {}
    ) as Promise<ERC721TokenFactory>;
  }
  override getDeployTransaction(
    _erc721TokenImpl: PromiseOrValue<string>,
    _erc721SoulboundTokenImpl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc721TokenImpl,
      _erc721SoulboundTokenImpl,
      overrides || {}
    );
  }
  override attach(address: string): ERC721TokenFactory {
    return super.attach(address) as ERC721TokenFactory;
  }
  override connect(signer: Signer): ERC721TokenFactory__factory {
    return super.connect(signer) as ERC721TokenFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenFactoryInterface {
    return new utils.Interface(_abi) as ERC721TokenFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721TokenFactory {
    return new Contract(address, _abi, signerOrProvider) as ERC721TokenFactory;
  }
}
