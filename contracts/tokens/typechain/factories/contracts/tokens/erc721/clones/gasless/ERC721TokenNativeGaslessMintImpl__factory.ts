/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721TokenNativeGaslessMintImpl,
  ERC721TokenNativeGaslessMintImplInterface,
} from "../../../../../../contracts/tokens/erc721/clones/gasless/ERC721TokenNativeGaslessMintImpl";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_initializationData",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61287b80620000f46000396000f3fe6080604052600436106101755760003560e01c806370a08231116100cb578063b88d4fde1161007f578063d5abeb0111610059578063d5abeb011461040d578063e8a3d48514610423578063e985e9c51461043857600080fd5b8063b88d4fde146103a0578063c6788bdd146103c0578063c87b56dd146103ed57600080fd5b80638da5cb5b116100b05780638da5cb5b1461034b57806395d89b411461036b578063a22cb4651461038057600080fd5b806370a082311461031557806375794a3c1461033557600080fd5b806323b872dd1161012d57806342842e0e1161010757806342842e0e146102c2578063439fab91146102e25780636352211e146102f557600080fd5b806323b872dd1461023e5780632d0335ab1461025e57806337c1e0fe146102a257600080fd5b8063081812fc1161015e578063081812fc146101d1578063095ea7b3146102095780630c53c51c1461022b57600080fd5b806301ffc9a71461017a57806306fdde03146101af575b600080fd5b34801561018657600080fd5b5061019a61019536600461205e565b610481565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b506101c46104d3565b6040516101a691906120d2565b3480156101dd57600080fd5b506101f16101ec3660046120e5565b610565565b6040516001600160a01b0390911681526020016101a6565b34801561021557600080fd5b50610229610224366004612113565b61058c565b005b6101c461023936600461221a565b6106c4565b34801561024a57600080fd5b5061022961025936600461228e565b610931565b34801561026a57600080fd5b506102946102793660046122cf565b6001600160a01b0316600090815260cc602052604090205490565b6040519081526020016101a6565b3480156102ae57600080fd5b506102296102bd3660046122ec565b6109a8565b3480156102ce57600080fd5b506102296102dd36600461228e565b610a80565b6102296102f0366004612334565b610a9b565b34801561030157600080fd5b506101f16103103660046120e5565b610bf7565b34801561032157600080fd5b506102946103303660046122cf565b610c5c565b34801561034157600080fd5b5061029460cd5481565b34801561035757600080fd5b5060d1546101f1906001600160a01b031681565b34801561037757600080fd5b506101c4610cf6565b34801561038c57600080fd5b5061022961039b366004612369565b610d05565b3480156103ac57600080fd5b506102296103bb3660046123a7565b610d10565b3480156103cc57600080fd5b506102946103db3660046122cf565b60d36020526000908152604090205481565b3480156103f957600080fd5b506101c46104083660046120e5565b610d8e565b34801561041957600080fd5b5061029460d05481565b34801561042f57600080fd5b506101c4610e22565b34801561044457600080fd5b5061019a610453366004612413565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806104b257506001600160e01b03198216635b5e139f60e01b145b806104cd57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104e290612441565b80601f016020809104026020016040519081016040528092919081815260200182805461050e90612441565b801561055b5780601f106105305761010080835404028352916020019161055b565b820191906000526020600020905b81548152906001019060200180831161053e57829003601f168201915b5050505050905090565b600061057082610e31565b506000908152606960205260409020546001600160a01b031690565b600061059782610bf7565b9050806001600160a01b0316836001600160a01b0316036106095760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061064357506001600160a01b0381166000908152606a6020908152604080832033845290915290205460ff165b6106b55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610600565b6106bf8383610e98565b505050565b606060006106d186610f06565b90506001600160e01b03196000358116908216036107575760405162461bcd60e51b815260206004820152603d60248201527f66756e6374696f6e5369676e61747572652063616e206e6f74206265206f662060448201527f657865637574654d6574615472616e73616374696f6e206d6574686f640000006064820152608401610600565b604080516060810182526001600160a01b038916600081815260cc6020908152908490205483528201529081018790526107948882888888610f21565b6107ea5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b6064820152608401610600565b6001600160a01b038816600090815260cc60205260408120805460019290610813908490612491565b92505081905550600080306001600160a01b0316348a8c60405160200161083b9291906124a4565b60408051601f1981840301815290829052610855916124db565b60006040518083038185875af1925050503d8060008114610892576040519150601f19603f3d011682016040523d82523d6000602084013e610897565b606091505b5091509150816108e95760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c000000006044820152606401610600565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8a338b60405161091c939291906124f7565b60405180910390a19998505050505050505050565b61093b3382611009565b61099d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610600565b6106bf838383611088565b6001600160a01b038416600090815260d36020526040902054156109d45763646cf5586000526004601cfd5b60cd54604080517f7bfd33bd144b9589a0b3585d6cb96101c2894c984ab9aac14c2b14d4b49b6ee060208201526001600160a01b03871691810191909152600090610a379060600160405160208183030381529060405280519060200120611275565b60d2549091506001600160a01b0316610a52828588886112c3565b6001600160a01b031614610a6e5763e6c4247b6000526004601cfd5b610a7886836112eb565b505050505050565b6106bf83838360405180602001604052806000815250610d10565b600054610100900460ff1615808015610abb5750600054600160ff909116105b80610ad55750303b158015610ad5575060005460ff166001145b610b475760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610600565b6000805460ff191660011790558015610b6a576000805461ff0019166101001790555b600080600080600080600088806020019051810190610b89919061257c565b9650965096509650965096509650610ba687878787878787611331565b505050505050508015610bf3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6000818152606760205260408120546001600160a01b0316806104cd5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610600565b60006001600160a01b038216610cda5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610600565b506001600160a01b031660009081526068602052604090205490565b6060606680546104e290612441565b610bf33383836113f0565b610d1a3383611009565b610d7c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610600565b610d88848484846114be565b50505050565b606060cf8054610d9d90612441565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc990612441565b8015610e165780601f10610deb57610100808354040283529160200191610e16565b820191906000526020600020905b815481529060010190602001808311610df957829003601f168201915b50505050509050919050565b606060ce80546104e290612441565b6000818152606760205260409020546001600160a01b0316610e955760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610600565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ecd82610bf7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008151600003610f1957506000919050565b506020015190565b6000806001610f37610f328861153c565b6115b9565b6040805160008152602081018083529290925260ff861690820152606081018790526080810186905260a0016020604051602081039080840390855afa158015610f85573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610fe85760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610600565b866001600160a01b0316816001600160a01b03161491505095945050505050565b60008061101583610bf7565b9050806001600160a01b0316846001600160a01b0316148061105c57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806110805750836001600160a01b031661107584610565565b6001600160a01b0316145b949350505050565b826001600160a01b031661109b82610bf7565b6001600160a01b0316146110ff5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610600565b6001600160a01b0382166111615760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610600565b61116e83838360016115e9565b826001600160a01b031661118182610bf7565b6001600160a01b0316146111e55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610600565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006104cd611282611671565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006112d4878787876116f1565b915091506112e1816117b5565b5095945050505050565b60d0548111156113035763c30436e96000526004601cfd5b6001600160a01b038216600090815260d36020526040902081905560cd80546001019055610bf382826118ff565b816113445763e6c4247b6000526004601cfd5b61136987604051806040016040528060038152602001620312e360ec1b815250611919565b611373878761198e565b61139887604051806040016040528060038152602001620312e360ec1b815250611a03565b600160cd5560ce6113a9868261269a565b5060cf6113b6858261269a565b5060d180546001600160a01b039485166001600160a01b03199182161790915560d280549390941692169190911790915560d05550505050565b816001600160a01b0316836001600160a01b0316036114515760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610600565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6114c9848484611088565b6114d584848484611a78565b610d885760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610600565b60006040518060800160405280604381526020016127dd604391398051602091820120835184830151604080870151805190860120905161159c950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60006115c460cb5490565b60405161190160f01b602082015260228101919091526042810183905260620161159c565b6001811115610d88576001600160a01b0384161561162f576001600160a01b0384166000908152606860205260408120805483929061162990849061275a565b90915550505b6001600160a01b03831615610d88576001600160a01b03831660009081526068602052604081208054839290611666908490612491565b909155505050505050565b60006116ec7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6116a060975490565b6098546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561172857506000905060036117ac565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561177c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117a5576000600192509250506117ac565b9150600090505b94509492505050565b60008160048111156117c9576117c961276d565b036117d15750565b60018160048111156117e5576117e561276d565b036118325760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610600565b60028160048111156118465761184661276d565b036118935760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610600565b60038160048111156118a7576118a761276d565b03610e955760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610600565b610bf3828260405180602001604052806000815250611bc1565b600054610100900460ff166119845760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610600565b610bf38282611c3f565b600054610100900460ff166119f95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610600565b610bf38282611cc4565b600054610100900460ff16611a6e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610600565b610bf38282611d48565b60006001600160a01b0384163b15611bb957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611abc903390899088908890600401612783565b6020604051808303816000875af1925050508015611af7575060408051601f3d908101601f19168201909252611af4918101906127bf565b60015b611b9f573d808015611b25576040519150601f19603f3d011682016040523d82523d6000602084013e611b2a565b606091505b508051600003611b975760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610600565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611080565b506001611080565b611bcb8383611dbd565b611bd86000848484611a78565b6106bf5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610600565b600054610100900460ff16611caa5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610600565b815160209283012081519190920120609791909155609855565b600054610100900460ff16611d2f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610600565b6065611d3b838261269a565b5060666106bf828261269a565b600054610100900460ff16611db35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610600565b610bf38282611f56565b6001600160a01b038216611e135760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610600565b6000818152606760205260409020546001600160a01b031615611e785760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610600565b611e866000838360016115e9565b6000818152606760205260409020546001600160a01b031615611eeb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610600565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600054610100900460ff16611fc15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610600565b6040518060800160405280604f8152602001612820604f9139805190602001208280519060200120828051906020012030611ff94690565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c00160408051601f19818403018152919052805160209091012060cb555050565b6001600160e01b031981168114610e9557600080fd5b60006020828403121561207057600080fd5b813561207b81612048565b9392505050565b60005b8381101561209d578181015183820152602001612085565b50506000910152565b600081518084526120be816020860160208601612082565b601f01601f19169290920160200192915050565b60208152600061207b60208301846120a6565b6000602082840312156120f757600080fd5b5035919050565b6001600160a01b0381168114610e9557600080fd5b6000806040838503121561212657600080fd5b8235612131816120fe565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561217e5761217e61213f565b604052919050565b600067ffffffffffffffff8211156121a0576121a061213f565b50601f01601f191660200190565b600082601f8301126121bf57600080fd5b81356121d26121cd82612186565b612155565b8181528460208386010111156121e757600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff8116811461221557600080fd5b919050565b600080600080600060a0868803121561223257600080fd5b853561223d816120fe565b9450602086013567ffffffffffffffff81111561225957600080fd5b612265888289016121ae565b945050604086013592506060860135915061228260808701612204565b90509295509295909350565b6000806000606084860312156122a357600080fd5b83356122ae816120fe565b925060208401356122be816120fe565b929592945050506040919091013590565b6000602082840312156122e157600080fd5b813561207b816120fe565b6000806000806080858703121561230257600080fd5b843561230d816120fe565b9350602085013592506040850135915061232960608601612204565b905092959194509250565b60006020828403121561234657600080fd5b813567ffffffffffffffff81111561235d57600080fd5b611080848285016121ae565b6000806040838503121561237c57600080fd5b8235612387816120fe565b91506020830135801515811461239c57600080fd5b809150509250929050565b600080600080608085870312156123bd57600080fd5b84356123c8816120fe565b935060208501356123d8816120fe565b925060408501359150606085013567ffffffffffffffff8111156123fb57600080fd5b612407878288016121ae565b91505092959194509250565b6000806040838503121561242657600080fd5b8235612431816120fe565b9150602083013561239c816120fe565b600181811c9082168061245557607f821691505b60208210810361247557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104cd576104cd61247b565b600083516124b6818460208801612082565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600082516124ed818460208701612082565b9190910192915050565b60006001600160a01b0380861683528085166020840152506060604083015261252360608301846120a6565b95945050505050565b600082601f83011261253d57600080fd5b815161254b6121cd82612186565b81815284602083860101111561256057600080fd5b611080826020830160208701612082565b8051612215816120fe565b600080600080600080600060e0888a03121561259757600080fd5b875167ffffffffffffffff808211156125af57600080fd5b6125bb8b838c0161252c565b985060208a01519150808211156125d157600080fd5b6125dd8b838c0161252c565b975060408a01519150808211156125f357600080fd5b6125ff8b838c0161252c565b965060608a015191508082111561261557600080fd5b506126228a828b0161252c565b94505061263160808901612571565b925061263f60a08901612571565b915060c0880151905092959891949750929550565b601f8211156106bf57600081815260208120601f850160051c8101602086101561267b5750805b601f850160051c820191505b81811015610a7857828155600101612687565b815167ffffffffffffffff8111156126b4576126b461213f565b6126c8816126c28454612441565b84612654565b602080601f8311600181146126fd57600084156126e55750858301515b600019600386901b1c1916600185901b178555610a78565b600085815260208120601f198616915b8281101561272c5788860151825594840194600190910190840161270d565b508582101561274a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156104cd576104cd61247b565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526127b560808301846120a6565b9695505050505050565b6000602082840312156127d157600080fd5b815161207b8161204856fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429a164736f6c6343000813000a";

type ERC721TokenNativeGaslessMintImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenNativeGaslessMintImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721TokenNativeGaslessMintImpl__factory extends ContractFactory {
  constructor(...args: ERC721TokenNativeGaslessMintImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721TokenNativeGaslessMintImpl> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721TokenNativeGaslessMintImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721TokenNativeGaslessMintImpl {
    return super.attach(address) as ERC721TokenNativeGaslessMintImpl;
  }
  override connect(signer: Signer): ERC721TokenNativeGaslessMintImpl__factory {
    return super.connect(signer) as ERC721TokenNativeGaslessMintImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenNativeGaslessMintImplInterface {
    return new utils.Interface(
      _abi
    ) as ERC721TokenNativeGaslessMintImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721TokenNativeGaslessMintImpl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721TokenNativeGaslessMintImpl;
  }
}
