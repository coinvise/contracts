/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721SoulboundTokenNativeGaslessMintImpl,
  ERC721SoulboundTokenNativeGaslessMintImplInterface,
} from "../../../../../../contracts/tokens/erc721/clones/gasless/ERC721SoulboundTokenNativeGaslessMintImpl";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Soulbound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_initializationData",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611c0a806100ed6000396000f3fe6080604052600436106101755760003560e01c806370a08231116100cb578063b88d4fde1161007f578063d5abeb0111610059578063d5abeb0114610419578063e8a3d4851461042f578063e985e9c51461044457600080fd5b8063b88d4fde146103b1578063c6788bdd146103cc578063c87b56dd146103f957600080fd5b80638da5cb5b116100b05780638da5cb5b1461036157806395d89b4114610381578063a22cb4651461039657600080fd5b806370a082311461031e57806375794a3c1461034b57600080fd5b806323b872dd1161012d57806342842e0e1161010757806342842e0e1461023e578063439fab91146102bd5780636352211e146102d057600080fd5b806323b872dd1461023e5780632d0335ab1461025957806337c1e0fe1461029d57600080fd5b8063081812fc1161015e578063081812fc146101ee578063095ea7b3146102105780630c53c51c1461022b57600080fd5b806301ffc9a71461017a57806306fdde03146101cc575b600080fd5b34801561018657600080fd5b506101b76101953660046113fc565b6301ffc9a760e09190911c9081146380ac58cd821417635b5e139f9091141790565b60405190151581526020015b60405180910390f35b3480156101d857600080fd5b506101e161045f565b6040516101c39190611495565b3480156101fa57600080fd5b5061020e6102093660046114a8565b6104ed565b005b34801561021c57600080fd5b5061020e6102093660046114d6565b6101e16102393660046115dd565b6104fb565b34801561024a57600080fd5b5061020e610209366004611651565b34801561026557600080fd5b5061028f610274366004611692565b6001600160a01b031660009081526036602052604090205490565b6040519081526020016101c3565b3480156102a957600080fd5b5061020e6102b83660046116af565b610785565b61020e6102cb3660046116f7565b61085d565b3480156102dc57600080fd5b506103066102eb3660046114a8565b603d602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101c3565b34801561032a57600080fd5b5061028f610339366004611692565b603e6020526000908152604090205481565b34801561035757600080fd5b5061028f60375481565b34801561036d57600080fd5b50603f54610306906001600160a01b031681565b34801561038d57600080fd5b506101e16109b9565b3480156103a257600080fd5b5061020e610209366004611734565b3480156103bd57600080fd5b5061020e610209366004611772565b3480156103d857600080fd5b5061028f6103e7366004611692565b60416020526000908152604090205481565b34801561040557600080fd5b506101e16104143660046114a8565b6109c6565b34801561042557600080fd5b5061028f603c5481565b34801561043b57600080fd5b506101e1610a5a565b34801561045057600080fd5b5061020e610209366004611811565b6038805461046c9061183f565b80601f01602080910402602001604051908101604052809291908181526020018280546104989061183f565b80156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b505050505081565b63a4420a956000526004601cfd5b6060600061050886610aec565b90507fffffffff000000000000000000000000000000000000000000000000000000006000358116908216036105ab5760405162461bcd60e51b815260206004820152603d60248201527f66756e6374696f6e5369676e61747572652063616e206e6f74206265206f662060448201527f657865637574654d6574615472616e73616374696f6e206d6574686f6400000060648201526084015b60405180910390fd5b604080516060810182526001600160a01b038916600081815260366020908152908490205483528201529081018790526105e88882888888610b07565b61063e5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b60648201526084016105a2565b6001600160a01b0388166000908152603660205260408120805460019290610667908490611879565b92505081905550600080306001600160a01b0316348a8c60405160200161068f92919061189a565b60408051601f19818403018152908290526106a9916118d1565b60006040518083038185875af1925050503d80600081146106e6576040519150601f19603f3d011682016040523d82523d6000602084013e6106eb565b606091505b50915091508161073d5760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c0000000060448201526064016105a2565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8a338b604051610770939291906118ed565b60405180910390a19998505050505050505050565b6001600160a01b038416600090815260416020526040902054156107b15763646cf5586000526004601cfd5b603754604080517f7bfd33bd144b9589a0b3585d6cb96101c2894c984ab9aac14c2b14d4b49b6ee060208201526001600160a01b038716918101919091526000906108149060600160405160208183030381529060405280519060200120610bef565b6040549091506001600160a01b031661082f82858888610c43565b6001600160a01b03161461084b5763e6c4247b6000526004601cfd5b6108558683610c6b565b505050505050565b600054610100900460ff161580801561087d5750600054600160ff909116105b806108975750303b158015610897575060005460ff166001145b6109095760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016105a2565b6000805460ff19166001179055801561092c576000805461ff0019166101001790555b60008060008060008060008880602001905181019061094b9190611972565b965096509650965096509650965061096887878787878787610d11565b5050505050505080156109b5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6039805461046c9061183f565b6060603b80546109d59061183f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a019061183f565b8015610a4e5780601f10610a2357610100808354040283529160200191610a4e565b820191906000526020600020905b815481529060010190602001808311610a3157829003601f168201915b50505050509050919050565b6060603a8054610a699061183f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a959061183f565b8015610ae25780601f10610ab757610100808354040283529160200191610ae2565b820191906000526020600020905b815481529060010190602001808311610ac557829003601f168201915b5050505050905090565b60008151600003610aff57506000919050565b506020015190565b6000806001610b1d610b1888610ded565b610e6a565b6040805160008152602081018083529290925260ff861690820152606081018790526080810186905260a0016020604051602081039080840390855afa158015610b6b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610bce5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016105a2565b866001600160a01b0316816001600160a01b03161491505095945050505050565b6000610c3d610bfc610e9a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610c5487878787610f1a565b91509150610c6181610fde565b5095945050505050565b603c54811115610c835763c30436e96000526004601cfd5b6001600160a01b0382166000818152603e6020908152604080832080546001908101909155603780549091019055848352603d8252808320805473ffffffffffffffffffffffffffffffffffffffff19168517905592825260419052908120829055819083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a45050565b81610d245763e6c4247b6000526004601cfd5b610d4987604051806040016040528060038152602001620312e360ec1b81525061112b565b610d6e87604051806040016040528060038152602001620312e360ec1b8152506111a0565b60016037556038610d7f8882611a95565b506039610d8c8782611a95565b50603a610d998682611a95565b50603b610da68582611a95565b50603f80546001600160a01b0394851673ffffffffffffffffffffffffffffffffffffffff19918216179091556040805493909416921691909117909155603c5550505050565b6000604051806080016040528060438152602001611b6c6043913980516020918201208351848301516040808701518051908601209051610e4d950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b6000610e7560355490565b60405161190160f01b6020820152602281019190915260428101839052606201610e4d565b6000610f157f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610ec960015490565b6002546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610f515750600090506003610fd5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610fa5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610fce57600060019250925050610fd5565b9150600090505b94509492505050565b6000816004811115610ff257610ff2611b55565b03610ffa5750565b600181600481111561100e5761100e611b55565b0361105b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105a2565b600281600481111561106f5761106f611b55565b036110bc5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105a2565b60038160048111156110d0576110d0611b55565b036111285760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105a2565b50565b600054610100900460ff166111965760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105a2565b6109b58282611215565b600054610100900460ff1661120b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105a2565b6109b5828261129a565b600054610100900460ff166112805760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105a2565b815160209283012081519190920120600191909155600255565b600054610100900460ff166113055760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105a2565b6109b58282600054610100900460ff166113755760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105a2565b6040518060800160405280604f8152602001611baf604f91398051906020012082805190602001208280519060200120306113ad4690565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c00160408051601f1981840301815291905280516020909101206035555050565b60006020828403121561140e57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461143e57600080fd5b9392505050565b60005b83811015611460578181015183820152602001611448565b50506000910152565b60008151808452611481816020860160208601611445565b601f01601f19169290920160200192915050565b60208152600061143e6020830184611469565b6000602082840312156114ba57600080fd5b5035919050565b6001600160a01b038116811461112857600080fd5b600080604083850312156114e957600080fd5b82356114f4816114c1565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561154157611541611502565b604052919050565b600067ffffffffffffffff82111561156357611563611502565b50601f01601f191660200190565b600082601f83011261158257600080fd5b813561159561159082611549565b611518565b8181528460208386010111156115aa57600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff811681146115d857600080fd5b919050565b600080600080600060a086880312156115f557600080fd5b8535611600816114c1565b9450602086013567ffffffffffffffff81111561161c57600080fd5b61162888828901611571565b9450506040860135925060608601359150611645608087016115c7565b90509295509295909350565b60008060006060848603121561166657600080fd5b8335611671816114c1565b92506020840135611681816114c1565b929592945050506040919091013590565b6000602082840312156116a457600080fd5b813561143e816114c1565b600080600080608085870312156116c557600080fd5b84356116d0816114c1565b935060208501359250604085013591506116ec606086016115c7565b905092959194509250565b60006020828403121561170957600080fd5b813567ffffffffffffffff81111561172057600080fd5b61172c84828501611571565b949350505050565b6000806040838503121561174757600080fd5b8235611752816114c1565b91506020830135801515811461176757600080fd5b809150509250929050565b60008060008060006080868803121561178a57600080fd5b8535611795816114c1565b945060208601356117a5816114c1565b935060408601359250606086013567ffffffffffffffff808211156117c957600080fd5b818801915088601f8301126117dd57600080fd5b8135818111156117ec57600080fd5b8960208285010111156117fe57600080fd5b9699959850939650602001949392505050565b6000806040838503121561182457600080fd5b823561182f816114c1565b91506020830135611767816114c1565b600181811c9082168061185357607f821691505b60208210810361187357634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610c3d57634e487b7160e01b600052601160045260246000fd5b600083516118ac818460208801611445565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600082516118e3818460208701611445565b9190910192915050565b60006001600160a01b038086168352808516602084015250606060408301526119196060830184611469565b95945050505050565b600082601f83011261193357600080fd5b815161194161159082611549565b81815284602083860101111561195657600080fd5b61172c826020830160208701611445565b80516115d8816114c1565b600080600080600080600060e0888a03121561198d57600080fd5b875167ffffffffffffffff808211156119a557600080fd5b6119b18b838c01611922565b985060208a01519150808211156119c757600080fd5b6119d38b838c01611922565b975060408a01519150808211156119e957600080fd5b6119f58b838c01611922565b965060608a0151915080821115611a0b57600080fd5b50611a188a828b01611922565b945050611a2760808901611967565b9250611a3560a08901611967565b915060c0880151905092959891949750929550565b601f821115611a9057600081815260208120601f850160051c81016020861015611a715750805b601f850160051c820191505b8181101561085557828155600101611a7d565b505050565b815167ffffffffffffffff811115611aaf57611aaf611502565b611ac381611abd845461183f565b84611a4a565b602080601f831160018114611af85760008415611ae05750858301515b600019600386901b1c1916600185901b178555610855565b600085815260208120601f198616915b82811015611b2757888601518255948401946001909101908401611b08565b5085821015611b455787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429a164736f6c6343000813000a";

type ERC721SoulboundTokenNativeGaslessMintImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721SoulboundTokenNativeGaslessMintImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721SoulboundTokenNativeGaslessMintImpl__factory extends ContractFactory {
  constructor(
    ...args: ERC721SoulboundTokenNativeGaslessMintImplConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721SoulboundTokenNativeGaslessMintImpl> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721SoulboundTokenNativeGaslessMintImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721SoulboundTokenNativeGaslessMintImpl {
    return super.attach(address) as ERC721SoulboundTokenNativeGaslessMintImpl;
  }
  override connect(
    signer: Signer
  ): ERC721SoulboundTokenNativeGaslessMintImpl__factory {
    return super.connect(
      signer
    ) as ERC721SoulboundTokenNativeGaslessMintImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721SoulboundTokenNativeGaslessMintImplInterface {
    return new utils.Interface(
      _abi
    ) as ERC721SoulboundTokenNativeGaslessMintImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721SoulboundTokenNativeGaslessMintImpl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721SoulboundTokenNativeGaslessMintImpl;
  }
}
