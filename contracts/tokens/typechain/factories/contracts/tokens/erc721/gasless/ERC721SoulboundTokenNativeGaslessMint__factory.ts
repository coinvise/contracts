/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721SoulboundTokenNativeGaslessMint,
  ERC721SoulboundTokenNativeGaslessMintInterface,
} from "../../../../../contracts/tokens/erc721/gasless/ERC721SoulboundTokenNativeGaslessMint";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_trustedAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Soulbound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101a060405260016002556200001462000243565b6001600160a01b0316610160523480156200002e57600080fd5b5060405162001c0738038062001c07833981016040819052620000519162000387565b6040805180820182526003808252620312e360ec1b602080840182905284518086019095529184528382015288519089012060e08190527fe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b36101008190524660a052899384928492849291907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200012e8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60809081523060c05261012091909152604080519182019052604f808252909450925062001bb8915050602083013980519060200120828051906020012082805190602001203062000185620002a160201b60201c565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c001604051602081830303815290604052805190602001206000819055505050505081620001e95763e6c4247b6000526004601cfd5b6003620001f78782620004ea565b506004620002068682620004ea565b506005620002158582620004ea565b506006620002248482620004ea565b506001600160a01b03909116610180526101405250620005b692505050565b60003033036200029b57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506200029e9050565b50335b90565b4690565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002cd57600080fd5b81516001600160401b0380821115620002ea57620002ea620002a5565b604051601f8301601f19908116603f01168101908282118183101715620003155762000315620002a5565b816040528381526020925086838588010111156200033257600080fd5b600091505b8382101562000356578582018301518183018401529082019062000337565b600093810190920192909252949350505050565b80516001600160a01b03811681146200038257600080fd5b919050565b60008060008060008060c08789031215620003a157600080fd5b86516001600160401b0380821115620003b957600080fd5b620003c78a838b01620002bb565b97506020890151915080821115620003de57600080fd5b620003ec8a838b01620002bb565b965060408901519150808211156200040357600080fd5b620004118a838b01620002bb565b955060608901519150808211156200042857600080fd5b506200043789828a01620002bb565b93505062000448608088016200036a565b915060a087015190509295509295509295565b600181811c908216806200047057607f821691505b6020821081036200049157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004e557600081815260208120601f850160051c81016020861015620004c05750805b601f850160051c820191505b81811015620004e157828155600101620004cc565b5050505b505050565b81516001600160401b03811115620005065762000506620002a5565b6200051e816200051784546200045b565b8462000497565b602080601f8311600181146200055657600084156200053d5750858301515b600019600386901b1c1916600185901b178555620004e1565b600085815260208120601f198616915b82811015620005875788860151825594840194600190910190840162000566565b5085821015620005a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161014051610160516101805161158a6200062e600039600061083e015260006103550152600081816104210152610bb001526000610dd401526000610e2301526000610dfe01526000610d5701526000610d8101526000610dab015261158a6000f3fe60806040526004361061016a5760003560e01c806370a08231116100cb578063b88d4fde1161007f578063d5abeb0111610059578063d5abeb011461040f578063e8a3d48514610443578063e985e9c51461045857600080fd5b8063b88d4fde146103a7578063c6788bdd146103c2578063c87b56dd146103ef57600080fd5b80638da5cb5b116100b05780638da5cb5b1461034357806395d89b4114610377578063a22cb4651461038c57600080fd5b806370a082311461030057806375794a3c1461032d57600080fd5b806323b872dd1161012257806337c1e0fe1161010757806337c1e0fe1461029257806342842e0e146102335780636352211e146102b257600080fd5b806323b872dd146102335780632d0335ab1461024e57600080fd5b8063081812fc11610153578063081812fc146101e3578063095ea7b3146102055780630c53c51c1461022057600080fd5b806301ffc9a71461016f57806306fdde03146101c1575b600080fd5b34801561017b57600080fd5b506101ac61018a366004611082565b6301ffc9a760e09190911c9081146380ac58cd821417635b5e139f9091141790565b60405190151581526020015b60405180910390f35b3480156101cd57600080fd5b506101d6610473565b6040516101b8919061111b565b3480156101ef57600080fd5b506102036101fe36600461112e565b610501565b005b34801561021157600080fd5b506102036101fe366004611163565b6101d661022e3660046111b4565b61050f565b34801561023f57600080fd5b506102036101fe36600461129a565b34801561025a57600080fd5b506102846102693660046112d6565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016101b8565b34801561029e57600080fd5b506102036102ad3660046112f1565b610792565b3480156102be57600080fd5b506102e86102cd36600461112e565b6007602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101b8565b34801561030c57600080fd5b5061028461031b3660046112d6565b60086020526000908152604090205481565b34801561033957600080fd5b5061028460025481565b34801561034f57600080fd5b506102e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561038357600080fd5b506101d66108a0565b34801561039857600080fd5b506102036101fe366004611337565b3480156103b357600080fd5b506102036101fe366004611373565b3480156103ce57600080fd5b506102846103dd3660046112d6565b60096020526000908152604090205481565b3480156103fb57600080fd5b506101d661040a36600461112e565b6108ad565b34801561041b57600080fd5b506102847f000000000000000000000000000000000000000000000000000000000000000081565b34801561044f57600080fd5b506101d6610941565b34801561046457600080fd5b506102036101fe36600461140e565b6003805461048090611441565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90611441565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b505050505081565b63a4420a956000526004601cfd5b6060600061051c866109d3565b90507fffffffff000000000000000000000000000000000000000000000000000000006000358116908216036105bf5760405162461bcd60e51b815260206004820152603d60248201527f66756e6374696f6e5369676e61747572652063616e206e6f74206265206f662060448201527f657865637574654d6574615472616e73616374696f6e206d6574686f6400000060648201526084015b60405180910390fd5b604080516060810182526001600160a01b038916600081815260016020908152908490205483528201529081018790526105fc88828888886109ee565b6106525760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b60648201526084016105b6565b6001600160a01b0388166000908152600160208190526040822080549192909161067d90849061147b565b90915550506040516000908190309061069c908b908d9060200161149c565b60408051601f19818403018152908290526106b6916114d3565b6000604051808303816000865af19150503d80600081146106f3576040519150601f19603f3d011682016040523d82523d6000602084013e6106f8565b606091505b50915091508161074a5760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c0000000060448201526064016105b6565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8a338b60405161077d939291906114ef565b60405180910390a19998505050505050505050565b6009600061079e610ad6565b6001600160a01b03168152602081019190915260400160002054156107cb5763646cf5586000526004601cfd5b600254600061083a7f7bfd33bd144b9589a0b3585d6cb96101c2894c984ab9aac14c2b14d4b49b6ee06107fc610ad6565b60405160200161081f9291909182526001600160a01b0316602082015260400190565b60405160208183030381529060405280519060200120610b32565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661087282858888610b86565b6001600160a01b03161461088e5763e6c4247b6000526004601cfd5b6108988683610bae565b505050505050565b6004805461048090611441565b6060600680546108bc90611441565b80601f01602080910402602001604051908101604052809291908181526020018280546108e890611441565b80156109355780601f1061090a57610100808354040283529160200191610935565b820191906000526020600020905b81548152906001019060200180831161091857829003601f168201915b50505050509050919050565b60606005805461095090611441565b80601f016020809104026020016040519081016040528092919081815260200182805461097c90611441565b80156109c95780601f1061099e576101008083540402835291602001916109c9565b820191906000526020600020905b8154815290600101906020018083116109ac57829003601f168201915b5050505050905090565b600081516000036109e657506000919050565b506020015190565b6000806001610a046109ff88610ca4565b610d21565b6040805160008152602081018083529290925260ff861690820152606081018790526080810186905260a0016020604051602081039080840390855afa158015610a52573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ab55760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016105b6565b866001600160a01b0316816001600160a01b03161491505095945050505050565b6000303303610b2c57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610b2f9050565b50335b90565b6000610b80610b3f610d4a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610b9787878787610e71565b91509150610ba481610f35565b5095945050505050565b7f0000000000000000000000000000000000000000000000000000000000000000811115610be45763c30436e96000526004601cfd5b6001600160a01b0382166000818152600860209081526040808320805460019081019091556002805490910190558483526007909152812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169092179091558190600990610c53610ad6565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550808260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a45050565b600060405180608001604052806043815260200161153b6043913980516020918201208351848301516040808701518051908601209051610d04950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b6000805460405161190160f01b6020820152602281019190915260428101839052606201610d04565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610da357507f000000000000000000000000000000000000000000000000000000000000000046145b15610dcd57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610ea85750600090506003610f2c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610efc573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f2557600060019250925050610f2c565b9150600090505b94509492505050565b6000816004811115610f4957610f49611524565b03610f515750565b6001816004811115610f6557610f65611524565b03610fb25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105b6565b6002816004811115610fc657610fc6611524565b036110135760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105b6565b600381600481111561102757611027611524565b0361107f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105b6565b50565b60006020828403121561109457600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146110c457600080fd5b9392505050565b60005b838110156110e65781810151838201526020016110ce565b50506000910152565b600081518084526111078160208601602086016110cb565b601f01601f19169290920160200192915050565b6020815260006110c460208301846110ef565b60006020828403121561114057600080fd5b5035919050565b80356001600160a01b038116811461115e57600080fd5b919050565b6000806040838503121561117657600080fd5b61117f83611147565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b803560ff8116811461115e57600080fd5b600080600080600060a086880312156111cc57600080fd5b6111d586611147565b9450602086013567ffffffffffffffff808211156111f257600080fd5b818801915088601f83011261120657600080fd5b8135818111156112185761121861118d565b604051601f8201601f19908116603f011681019083821181831017156112405761124061118d565b816040528281528b602084870101111561125957600080fd5b826020860160208301376000602084830101528098505050505050604086013592506060860135915061128e608087016111a3565b90509295509295909350565b6000806000606084860312156112af57600080fd5b6112b884611147565b92506112c660208501611147565b9150604084013590509250925092565b6000602082840312156112e857600080fd5b6110c482611147565b6000806000806080858703121561130757600080fd5b61131085611147565b9350602085013592506040850135915061132c606086016111a3565b905092959194509250565b6000806040838503121561134a57600080fd5b61135383611147565b91506020830135801515811461136857600080fd5b809150509250929050565b60008060008060006080868803121561138b57600080fd5b61139486611147565b94506113a260208701611147565b935060408601359250606086013567ffffffffffffffff808211156113c657600080fd5b818801915088601f8301126113da57600080fd5b8135818111156113e957600080fd5b8960208285010111156113fb57600080fd5b9699959850939650602001949392505050565b6000806040838503121561142157600080fd5b61142a83611147565b915061143860208401611147565b90509250929050565b600181811c9082168061145557607f821691505b60208210810361147557634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610b8057634e487b7160e01b600052601160045260246000fd5b600083516114ae8184602088016110cb565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600082516114e58184602087016110cb565b9190910192915050565b60006001600160a01b0380861683528085166020840152506060604083015261151b60608301846110ef565b95945050505050565b634e487b7160e01b600052602160045260246000fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a164736f6c6343000813000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

type ERC721SoulboundTokenNativeGaslessMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721SoulboundTokenNativeGaslessMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721SoulboundTokenNativeGaslessMint__factory extends ContractFactory {
  constructor(...args: ERC721SoulboundTokenNativeGaslessMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721SoulboundTokenNativeGaslessMint> {
    return super.deploy(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    ) as Promise<ERC721SoulboundTokenNativeGaslessMint>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC721SoulboundTokenNativeGaslessMint {
    return super.attach(address) as ERC721SoulboundTokenNativeGaslessMint;
  }
  override connect(
    signer: Signer
  ): ERC721SoulboundTokenNativeGaslessMint__factory {
    return super.connect(
      signer
    ) as ERC721SoulboundTokenNativeGaslessMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721SoulboundTokenNativeGaslessMintInterface {
    return new utils.Interface(
      _abi
    ) as ERC721SoulboundTokenNativeGaslessMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721SoulboundTokenNativeGaslessMint {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721SoulboundTokenNativeGaslessMint;
  }
}
