/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721TokenNativeGaslessMint,
  ERC721TokenNativeGaslessMintInterface,
} from "../../../../../contracts/tokens/erc721/gasless/ERC721TokenNativeGaslessMint";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_trustedAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101a060405260016008556200001462000224565b6001600160a01b0316610160523480156200002e57600080fd5b50604051620027a8380380620027a8833981016040819052620000519162000368565b85604051806040016040528060038152602001620312e360ec1b815250818189604051806040016040528060038152602001620312e360ec1b8152508b8b8160009081620000a09190620004cb565b506001620000af8282620004cb565b5050825160209384012082519284019290922060e08381526101008290524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818a01819052818301989098526060810195909552608080860193909352308583018190528151808703909301835260c0808701808452845194909a0193909320909352919052610120949094526101408201909352604f808552926200275992500139805190602001208280519060200120828051906020012030620001846200028260201b60201c565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c001604051602081830303815290604052805190602001206006819055505050505081620001e85763e6c4247b6000526004601cfd5b6009620001f68582620004cb565b50600a620002058482620004cb565b506001600160a01b039091166101805261014052506200059792505050565b60003033036200027c57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506200027f9050565b50335b90565b4690565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ae57600080fd5b81516001600160401b0380821115620002cb57620002cb62000286565b604051601f8301601f19908116603f01168101908282118183101715620002f657620002f662000286565b816040528381526020925086838588010111156200031357600080fd5b600091505b8382101562000337578582018301518183018401529082019062000318565b600093810190920192909252949350505050565b80516001600160a01b03811681146200036357600080fd5b919050565b60008060008060008060c087890312156200038257600080fd5b86516001600160401b03808211156200039a57600080fd5b620003a88a838b016200029c565b97506020890151915080821115620003bf57600080fd5b620003cd8a838b016200029c565b96506040890151915080821115620003e457600080fd5b620003f28a838b016200029c565b955060608901519150808211156200040957600080fd5b506200041889828a016200029c565b93505062000429608088016200034b565b915060a087015190509295509295509295565b600181811c908216806200045157607f821691505b6020821081036200047257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c657600081815260208120601f850160051c81016020861015620004a15750805b601f850160051c820191505b81811015620004c257828155600101620004ad565b5050505b505050565b81516001600160401b03811115620004e757620004e762000286565b620004ff81620004f884546200043c565b8462000478565b602080601f8311600181146200053757600084156200051e5750858301515b600019600386901b1c1916600185901b178555620004c2565b600085815260208120601f198616915b82811015620005685788860151825594840194600190910190840162000547565b5085821015620005875787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161014051610160516101805161214a6200060f6000396000610a5f0152600061033f015260008181610415015261124c015260006115c501526000611614015260006115ef01526000611548015260006115720152600061159c015261214a6000f3fe60806040526004361061016a5760003560e01c806370a08231116100cb578063b88d4fde1161007f578063d5abeb0111610059578063d5abeb0114610403578063e8a3d48514610437578063e985e9c51461044c57600080fd5b8063b88d4fde14610396578063c6788bdd146103b6578063c87b56dd146103e357600080fd5b80638da5cb5b116100b05780638da5cb5b1461032d57806395d89b4114610361578063a22cb4651461037657600080fd5b806370a08231146102f757806375794a3c1461031757600080fd5b806323b872dd1161012257806337c1e0fe1161010757806337c1e0fe1461029757806342842e0e146102b75780636352211e146102d757600080fd5b806323b872dd146102335780632d0335ab1461025357600080fd5b8063081812fc11610153578063081812fc146101c6578063095ea7b3146101fe5780630c53c51c1461022057600080fd5b806301ffc9a71461016f57806306fdde03146101a4575b600080fd5b34801561017b57600080fd5b5061018f61018a366004611c0d565b610495565b60405190151581526020015b60405180910390f35b3480156101b057600080fd5b506101b96104e7565b60405161019b9190611c81565b3480156101d257600080fd5b506101e66101e1366004611c94565b610579565b6040516001600160a01b03909116815260200161019b565b34801561020a57600080fd5b5061021e610219366004611cc9565b6105a0565b005b6101b961022e366004611da7565b6106d8565b34801561023f57600080fd5b5061021e61024e366004611e19565b61093c565b34801561025f57600080fd5b5061028961026e366004611e55565b6001600160a01b031660009081526007602052604090205490565b60405190815260200161019b565b3480156102a357600080fd5b5061021e6102b2366004611e70565b6109b3565b3480156102c357600080fd5b5061021e6102d2366004611e19565b610ac1565b3480156102e357600080fd5b506101e66102f2366004611c94565b610adc565b34801561030357600080fd5b50610289610312366004611e55565b610b41565b34801561032357600080fd5b5061028960085481565b34801561033957600080fd5b506101e67f000000000000000000000000000000000000000000000000000000000000000081565b34801561036d57600080fd5b506101b9610bdb565b34801561038257600080fd5b5061021e610391366004611eb6565b610bea565b3480156103a257600080fd5b5061021e6103b1366004611ef2565b610bf9565b3480156103c257600080fd5b506102896103d1366004611e55565b600b6020526000908152604090205481565b3480156103ef57600080fd5b506101b96103fe366004611c94565b610c77565b34801561040f57600080fd5b506102897f000000000000000000000000000000000000000000000000000000000000000081565b34801561044357600080fd5b506101b9610d0b565b34801561045857600080fd5b5061018f610467366004611f5a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806104c657506001600160e01b03198216635b5e139f60e01b145b806104e157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104f690611f8d565b80601f016020809104026020016040519081016040528092919081815260200182805461052290611f8d565b801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058482610d1a565b506000908152600460205260409020546001600160a01b031690565b60006105ab82610adc565b9050806001600160a01b0316836001600160a01b03160361061d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061065757506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106c95760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610614565b6106d38383610d81565b505050565b606060006106e586610dfc565b90506001600160e01b031960003581169082160361076b5760405162461bcd60e51b815260206004820152603d60248201527f66756e6374696f6e5369676e61747572652063616e206e6f74206265206f662060448201527f657865637574654d6574615472616e73616374696f6e206d6574686f640000006064820152608401610614565b604080516060810182526001600160a01b038916600081815260076020908152908490205483528201529081018790526107a88882888888610e17565b6107fe5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b6064820152608401610614565b6001600160a01b0388166000908152600760205260408120805460019290610827908490611fdd565b909155505060405160009081903090610846908b908d90602001611ff0565b60408051601f198184030181529082905261086091612027565b6000604051808303816000865af19150503d806000811461089d576040519150601f19603f3d011682016040523d82523d6000602084013e6108a2565b606091505b5091509150816108f45760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c000000006044820152606401610614565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8a338b60405161092793929190612043565b60405180910390a19998505050505050505050565b6109463382610eff565b6109a85760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610614565b6106d3838383610f7e565b600b60006109bf611178565b6001600160a01b03168152602081019190915260400160002054156109ec5763646cf5586000526004601cfd5b6008546000610a5b7f7bfd33bd144b9589a0b3585d6cb96101c2894c984ab9aac14c2b14d4b49b6ee0610a1d611178565b604051602001610a409291909182526001600160a01b0316602082015260400190565b604051602081830303815290604052805190602001206111d4565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a9382858888611222565b6001600160a01b031614610aaf5763e6c4247b6000526004601cfd5b610ab9868361124a565b505050505050565b6106d383838360405180602001604052806000815250610bf9565b6000818152600260205260408120546001600160a01b0316806104e15760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610614565b60006001600160a01b038216610bbf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610614565b506001600160a01b031660009081526003602052604090205490565b6060600180546104f690611f8d565b610bf53383836112ba565b5050565b610c033383610eff565b610c655760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610614565b610c7184848484611388565b50505050565b6060600a8054610c8690611f8d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb290611f8d565b8015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b50505050509050919050565b6060600980546104f690611f8d565b6000818152600260205260409020546001600160a01b0316610d7e5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610614565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610dc382610adc565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008151600003610e0f57506000919050565b506020015190565b6000806001610e2d610e2888611406565b611483565b6040805160008152602081018083529290925260ff861690820152606081018790526080810186905260a0016020604051602081039080840390855afa158015610e7b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ede5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610614565b866001600160a01b0316816001600160a01b03161491505095945050505050565b600080610f0b83610adc565b9050806001600160a01b0316846001600160a01b03161480610f5257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610f765750836001600160a01b0316610f6b84610579565b6001600160a01b0316145b949350505050565b826001600160a01b0316610f9182610adc565b6001600160a01b031614610ff55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610614565b6001600160a01b0382166110575760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610614565b61106483838360016114b3565b826001600160a01b031661107782610adc565b6001600160a01b0316146110db5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610614565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60003033036111ce57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506111d19050565b50335b90565b60006104e16111e161153b565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061123387878787611662565b9150915061124081611726565b5095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000008111156112805763c30436e96000526004601cfd5b80600b600061128d611178565b6001600160a01b03168152602081019190915260400160002055600880546001019055610bf58282611870565b816001600160a01b0316836001600160a01b03160361131b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610614565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611393848484610f7e565b61139f8484848461188a565b610c715760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610614565b60006040518060800160405280604381526020016120fb6043913980516020918201208351848301516040808701518051908601209051611466950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b600061148e60065490565b60405161190160f01b6020820152602281019190915260428101839052606201611466565b6001811115610c71576001600160a01b038416156114f9576001600160a01b038416600090815260036020526040812080548392906114f3908490612078565b90915550505b6001600160a01b03831615610c71576001600160a01b03831660009081526003602052604081208054839290611530908490611fdd565b909155505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561159457507f000000000000000000000000000000000000000000000000000000000000000046145b156115be57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611699575060009050600361171d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116ed573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117165760006001925092505061171d565b9150600090505b94509492505050565b600081600481111561173a5761173a61208b565b036117425750565b60018160048111156117565761175661208b565b036117a35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610614565b60028160048111156117b7576117b761208b565b036118045760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610614565b60038160048111156118185761181861208b565b03610d7e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610614565b610bf58282604051806020016040528060008152506119d3565b60006001600160a01b0384163b156119cb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118ce9033908990889088906004016120a1565b6020604051808303816000875af1925050508015611909575060408051601f3d908101601f19168201909252611906918101906120dd565b60015b6119b1573d808015611937576040519150601f19603f3d011682016040523d82523d6000602084013e61193c565b606091505b5080516000036119a95760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610614565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f76565b506001610f76565b6119dd8383611a51565b6119ea600084848461188a565b6106d35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610614565b6001600160a01b038216611aa75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610614565b6000818152600260205260409020546001600160a01b031615611b0c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610614565b611b1a6000838360016114b3565b6000818152600260205260409020546001600160a01b031615611b7f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610614565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610d7e57600080fd5b600060208284031215611c1f57600080fd5b8135611c2a81611bf7565b9392505050565b60005b83811015611c4c578181015183820152602001611c34565b50506000910152565b60008151808452611c6d816020860160208601611c31565b601f01601f19169290920160200192915050565b602081526000611c2a6020830184611c55565b600060208284031215611ca657600080fd5b5035919050565b80356001600160a01b0381168114611cc457600080fd5b919050565b60008060408385031215611cdc57600080fd5b611ce583611cad565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611d1a57600080fd5b813567ffffffffffffffff80821115611d3557611d35611cf3565b604051601f8301601f19908116603f01168101908282118183101715611d5d57611d5d611cf3565b81604052838152866020858801011115611d7657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff81168114611cc457600080fd5b600080600080600060a08688031215611dbf57600080fd5b611dc886611cad565b9450602086013567ffffffffffffffff811115611de457600080fd5b611df088828901611d09565b9450506040860135925060608601359150611e0d60808701611d96565b90509295509295909350565b600080600060608486031215611e2e57600080fd5b611e3784611cad565b9250611e4560208501611cad565b9150604084013590509250925092565b600060208284031215611e6757600080fd5b611c2a82611cad565b60008060008060808587031215611e8657600080fd5b611e8f85611cad565b93506020850135925060408501359150611eab60608601611d96565b905092959194509250565b60008060408385031215611ec957600080fd5b611ed283611cad565b915060208301358015158114611ee757600080fd5b809150509250929050565b60008060008060808587031215611f0857600080fd5b611f1185611cad565b9350611f1f60208601611cad565b925060408501359150606085013567ffffffffffffffff811115611f4257600080fd5b611f4e87828801611d09565b91505092959194509250565b60008060408385031215611f6d57600080fd5b611f7683611cad565b9150611f8460208401611cad565b90509250929050565b600181811c90821680611fa157607f821691505b602082108103611fc157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104e1576104e1611fc7565b60008351612002818460208801611c31565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b60008251612039818460208701611c31565b9190910192915050565b60006001600160a01b0380861683528085166020840152506060604083015261206f6060830184611c55565b95945050505050565b818103818111156104e1576104e1611fc7565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526120d36080830184611c55565b9695505050505050565b6000602082840312156120ef57600080fd5b8151611c2a81611bf756fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a164736f6c6343000813000a454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

type ERC721TokenNativeGaslessMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenNativeGaslessMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721TokenNativeGaslessMint__factory extends ContractFactory {
  constructor(...args: ERC721TokenNativeGaslessMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721TokenNativeGaslessMint> {
    return super.deploy(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    ) as Promise<ERC721TokenNativeGaslessMint>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC721TokenNativeGaslessMint {
    return super.attach(address) as ERC721TokenNativeGaslessMint;
  }
  override connect(signer: Signer): ERC721TokenNativeGaslessMint__factory {
    return super.connect(signer) as ERC721TokenNativeGaslessMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenNativeGaslessMintInterface {
    return new utils.Interface(_abi) as ERC721TokenNativeGaslessMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721TokenNativeGaslessMint {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721TokenNativeGaslessMint;
  }
}
