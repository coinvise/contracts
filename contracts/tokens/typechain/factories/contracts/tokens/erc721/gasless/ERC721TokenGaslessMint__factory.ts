/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721TokenGaslessMint,
  ERC721TokenGaslessMintInterface,
} from "../../../../../contracts/tokens/erc721/gasless/ERC721TokenGaslessMint";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_trustedAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101c060405260016006553480156200001757600080fd5b506040516200203f3803806200203f8339810160408190526200003a916200029c565b6040805180820190915260038152620312e360ec1b6020820152819088908189600062000068838262000413565b50600162000077828262000413565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b031661014052826200012c5763e6c4247b6000526004601cfd5b6200013662000180565b6001600160a01b031661018052600762000151868262000413565b50600862000160858262000413565b50506001600160a01b039091166101a0526101605250620004df92505050565b60006200018c62000191565b905090565b610140516000906001600160a01b03163303620001b5575060131936013560601c90565b503390565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e257600080fd5b81516001600160401b0380821115620001ff57620001ff620001ba565b604051601f8301601f19908116603f011681019082821181831017156200022a576200022a620001ba565b816040528381526020925086838588010111156200024757600080fd5b600091505b838210156200026b57858201830151818301840152908201906200024c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200029757600080fd5b919050565b600080600080600080600060e0888a031215620002b857600080fd5b87516001600160401b0380821115620002d057600080fd5b620002de8b838c01620001d0565b985060208a0151915080821115620002f557600080fd5b620003038b838c01620001d0565b975060408a01519150808211156200031a57600080fd5b620003288b838c01620001d0565b965060608a01519150808211156200033f57600080fd5b506200034e8a828b01620001d0565b9450506200035f608089016200027f565b925060a088015191506200037660c089016200027f565b905092959891949750929550565b600181811c908216806200039957607f821691505b602082108103620003ba57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040e57600081815260208120601f850160051c81016020861015620003e95750805b601f850160051c820191505b818110156200040a57828155600101620003f5565b5050505b505050565b81516001600160401b038111156200042f576200042f620001ba565b620004478162000440845462000384565b84620003c0565b602080601f8311600181146200047f5760008415620004665750858301515b600019600386901b1c1916600185901b1785556200040a565b600085815260208120601f198616915b82811015620004b0578886015182559484019460019091019084016200048f565b5085821015620004cf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051611ad66200056960003960006106f8015260006102a90152600081816103310152610da30152600081816102370152610f61015260006110b301526000611102015260006110dd01526000611036015260006110600152600061108a0152611ad66000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806375794a3c116100cd578063c6788bdd11610081578063d5abeb0111610066578063d5abeb011461032c578063e8a3d48514610353578063e985e9c51461035b57600080fd5b8063c6788bdd146102f9578063c87b56dd1461031957600080fd5b806395d89b41116100b257806395d89b41146102cb578063a22cb465146102d3578063b88d4fde146102e657600080fd5b806375794a3c1461029b5780638da5cb5b146102a457600080fd5b806337c1e0fe11610124578063572b6c0511610109578063572b6c05146102275780636352211e1461026757806370a082311461027a57600080fd5b806337c1e0fe1461020157806342842e0e1461021457600080fd5b8063081812fc11610155578063081812fc146101ae578063095ea7b3146101d957806323b872dd146101ee57600080fd5b806301ffc9a71461017157806306fdde0314610199575b600080fd5b61018461017f366004611702565b610397565b60405190151581526020015b60405180910390f35b6101a16103e9565b604051610190919061176c565b6101c16101bc36600461177f565b61047b565b6040516001600160a01b039091168152602001610190565b6101ec6101e73660046117b4565b6104a2565b005b6101ec6101fc3660046117de565b6105ce565b6101ec61020f36600461181a565b61064c565b6101ec6102223660046117de565b61075a565b610184610235366004611868565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6101c161027536600461177f565b610775565b61028d610288366004611868565b6107da565b604051908152602001610190565b61028d60065481565b6101c17f000000000000000000000000000000000000000000000000000000000000000081565b6101a1610874565b6101ec6102e1366004611883565b610883565b6101ec6102f43660046118d5565b610899565b61028d610307366004611868565b60096020526000908152604090205481565b6101a161032736600461177f565b61091e565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b6101a16109b2565b6101846103693660046119b1565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806103c857506001600160e01b03198216635b5e139f60e01b145b806103e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103f8906119e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610424906119e4565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b5050505050905090565b6000610486826109c1565b506000908152600460205260409020546001600160a01b031690565b60006104ad82610775565b9050806001600160a01b0316836001600160a01b03160361051f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b806001600160a01b0316610531610a28565b6001600160a01b0316148061054d575061054d81610369610a28565b6105bf5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610516565b6105c98383610a37565b505050565b6105df6105d9610a28565b82610ab2565b6106415760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610516565b6105c9838383610b31565b60096000610658610a28565b6001600160a01b03168152602081019190915260400160002054156106855763646cf5586000526004601cfd5b60065460006106f47f7bfd33bd144b9589a0b3585d6cb96101c2894c984ab9aac14c2b14d4b49b6ee06106b6610a28565b6040516020016106d99291909182526001600160a01b0316602082015260400190565b60405160208183030381529060405280519060200120610d2b565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661072c82858888610d79565b6001600160a01b0316146107485763e6c4247b6000526004601cfd5b6107528683610da1565b505050505050565b6105c983838360405180602001604052806000815250610899565b6000818152600260205260408120546001600160a01b0316806103e35760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610516565b60006001600160a01b0382166108585760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610516565b506001600160a01b031660009081526003602052604090205490565b6060600180546103f8906119e4565b61089561088e610a28565b8383610e11565b5050565b6108aa6108a4610a28565b83610ab2565b61090c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610516565b61091884848484610edf565b50505050565b60606008805461092d906119e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610959906119e4565b80156109a65780601f1061097b576101008083540402835291602001916109a6565b820191906000526020600020905b81548152906001019060200180831161098957829003601f168201915b50505050509050919050565b6060600780546103f8906119e4565b6000818152600260205260409020546001600160a01b0316610a255760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610516565b50565b6000610a32610f5d565b905090565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610a7982610775565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610abe83610775565b9050806001600160a01b0316846001600160a01b03161480610b0557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b295750836001600160a01b0316610b1e8461047b565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b4482610775565b6001600160a01b031614610ba85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610516565b6001600160a01b038216610c0a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610516565b610c178383836001610fa1565b826001600160a01b0316610c2a82610775565b6001600160a01b031614610c8e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610516565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006103e3610d38611029565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610d8a87878787611150565b91509150610d9781611214565b5095945050505050565b7f0000000000000000000000000000000000000000000000000000000000000000811115610dd75763c30436e96000526004601cfd5b8060096000610de4610a28565b6001600160a01b03168152602081019190915260400160002055600680546001019055610895828261135e565b816001600160a01b0316836001600160a01b031603610e725760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610516565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eea848484610b31565b610ef684848484611378565b6109185760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610516565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610f9c575060131936013560601c90565b503390565b6001811115610918576001600160a01b03841615610fe7576001600160a01b03841660009081526003602052604081208054839290610fe1908490611a34565b90915550505b6001600160a01b03831615610918576001600160a01b0383166000908152600360205260408120805483929061101e908490611a47565b909155505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561108257507f000000000000000000000000000000000000000000000000000000000000000046145b156110ac57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611187575060009050600361120b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111db573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112045760006001925092505061120b565b9150600090505b94509492505050565b600081600481111561122857611228611a5a565b036112305750565b600181600481111561124457611244611a5a565b036112915760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610516565b60028160048111156112a5576112a5611a5a565b036112f25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610516565b600381600481111561130657611306611a5a565b03610a255760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610516565b6108958282604051806020016040528060008152506114c8565b60006001600160a01b0384163b156114c057836001600160a01b031663150b7a026113a1610a28565b8786866040518563ffffffff1660e01b81526004016113c39493929190611a70565b6020604051808303816000875af19250505080156113fe575060408051601f3d908101601f191682019092526113fb91810190611aac565b60015b6114a6573d80801561142c576040519150601f19603f3d011682016040523d82523d6000602084013e611431565b606091505b50805160000361149e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610516565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b29565b506001610b29565b6114d28383611546565b6114df6000848484611378565b6105c95760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610516565b6001600160a01b03821661159c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610516565b6000818152600260205260409020546001600160a01b0316156116015760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610516565b61160f600083836001610fa1565b6000818152600260205260409020546001600160a01b0316156116745760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610516565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610a2557600080fd5b60006020828403121561171457600080fd5b813561171f816116ec565b9392505050565b6000815180845260005b8181101561174c57602081850181015186830182015201611730565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061171f6020830184611726565b60006020828403121561179157600080fd5b5035919050565b80356001600160a01b03811681146117af57600080fd5b919050565b600080604083850312156117c757600080fd5b6117d083611798565b946020939093013593505050565b6000806000606084860312156117f357600080fd5b6117fc84611798565b925061180a60208501611798565b9150604084013590509250925092565b6000806000806080858703121561183057600080fd5b61183985611798565b93506020850135925060408501359150606085013560ff8116811461185d57600080fd5b939692955090935050565b60006020828403121561187a57600080fd5b61171f82611798565b6000806040838503121561189657600080fd5b61189f83611798565b9150602083013580151581146118b457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156118eb57600080fd5b6118f485611798565b935061190260208601611798565b925060408501359150606085013567ffffffffffffffff8082111561192657600080fd5b818701915087601f83011261193a57600080fd5b81358181111561194c5761194c6118bf565b604051601f8201601f19908116603f01168101908382118183101715611974576119746118bf565b816040528281528a602084870101111561198d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156119c457600080fd5b6119cd83611798565b91506119db60208401611798565b90509250929050565b600181811c908216806119f857607f821691505b602082108103611a1857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103e3576103e3611a1e565b808201808211156103e3576103e3611a1e565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152611aa26080830184611726565b9695505050505050565b600060208284031215611abe57600080fd5b815161171f816116ec56fea164736f6c6343000813000a";

type ERC721TokenGaslessMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenGaslessMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721TokenGaslessMint__factory extends ContractFactory {
  constructor(...args: ERC721TokenGaslessMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721TokenGaslessMint> {
    return super.deploy(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      _trustedForwarder,
      overrides || {}
    ) as Promise<ERC721TokenGaslessMint>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      _trustedForwarder,
      overrides || {}
    );
  }
  override attach(address: string): ERC721TokenGaslessMint {
    return super.attach(address) as ERC721TokenGaslessMint;
  }
  override connect(signer: Signer): ERC721TokenGaslessMint__factory {
    return super.connect(signer) as ERC721TokenGaslessMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenGaslessMintInterface {
    return new utils.Interface(_abi) as ERC721TokenGaslessMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721TokenGaslessMint {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721TokenGaslessMint;
  }
}
