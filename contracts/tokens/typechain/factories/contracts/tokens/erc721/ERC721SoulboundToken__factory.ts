/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721SoulboundToken,
  ERC721SoulboundTokenInterface,
} from "../../../../contracts/tokens/erc721/ERC721SoulboundToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_trustedAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Soulbound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101a0604052600160005533610160523480156200001c57600080fd5b5060405162001256380380620012568339810160408190526200003f916200024d565b60408051808201825260038152620312e360ec1b60209182015287518882012060e08190527fe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b36101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818801959095526060810193909352608080840192909252308382018190528651808503909201825260c093840190965280519401939093209092529190526101205281620001115763e6c4247b6000526004601cfd5b60016200011f8782620003b0565b5060026200012e8682620003b0565b5060036200013d8582620003b0565b5060046200014c8482620003b0565b506001600160a01b039091166101805261014052506200047c92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019357600080fd5b81516001600160401b0380821115620001b057620001b06200016b565b604051601f8301601f19908116603f01168101908282118183101715620001db57620001db6200016b565b81604052838152602092508683858801011115620001f857600080fd5b600091505b838210156200021c5785820183015181830184015290820190620001fd565b600093810190920192909252949350505050565b80516001600160a01b03811681146200024857600080fd5b919050565b60008060008060008060c087890312156200026757600080fd5b86516001600160401b03808211156200027f57600080fd5b6200028d8a838b0162000181565b97506020890151915080821115620002a457600080fd5b620002b28a838b0162000181565b96506040890151915080821115620002c957600080fd5b620002d78a838b0162000181565b95506060890151915080821115620002ee57600080fd5b50620002fd89828a0162000181565b9350506200030e6080880162000230565b915060a087015190509295509295509295565b600181811c908216806200033657607f821691505b6020821081036200035757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ab57600081815260208120601f850160051c81016020861015620003865750805b601f850160051c820191505b81811015620003a75782815560010162000392565b5050505b505050565b81516001600160401b03811115620003cc57620003cc6200016b565b620003e481620003dd845462000321565b846200035d565b602080601f8311600181146200041c5760008415620004035750858301515b600019600386901b1c1916600185901b178555620003a7565b600085815260208120601f198616915b828110156200044d578886015182559484019460019091019084016200042c565b50858210156200046c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051610140516101605161018051610d62620004f46000396000610445015260006102710152600081816102ef0152610658015260006107ad015260006107fc015260006107d7015260006107300152600061075a015260006107840152610d626000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806375794a3c116100cd578063c6788bdd11610081578063d5abeb0111610066578063d5abeb01146102ea578063e8a3d48514610311578063e985e9c51461031957600080fd5b8063c6788bdd146102b7578063c87b56dd146102d757600080fd5b806395d89b41116100b257806395d89b4114610293578063a22cb4651461029b578063b88d4fde146102a957600080fd5b806375794a3c146102635780638da5cb5b1461026c57600080fd5b806323b872dd1161012457806342842e0e1161010957806342842e0e146101d35780636352211e146101f457806370a082311461023557600080fd5b806323b872dd146101d357806337c1e0fe146101e157600080fd5b806301ffc9a71461015657806306fdde031461019b578063081812fc146101b0578063095ea7b3146101c5575b600080fd5b610186610164366004610a60565b6301ffc9a760e09190911c9081146380ac58cd821417635b5e139f9091141790565b60405190151581526020015b60405180910390f35b6101a3610327565b6040516101929190610aa9565b6101c36101be366004610af7565b6103b5565b005b6101c36101be366004610b2c565b6101c36101be366004610b56565b6101c36101ef366004610b92565b6103c3565b61021d610202366004610af7565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610192565b610255610243366004610be0565b60066020526000908152604090205481565b604051908152602001610192565b61025560005481565b61021d7f000000000000000000000000000000000000000000000000000000000000000081565b6101a36104a7565b6101c36101be366004610bfb565b6101c36101be366004610c37565b6102556102c5366004610be0565b60076020526000908152604090205481565b6101a36102e5366004610af7565b6104b4565b6102557f000000000000000000000000000000000000000000000000000000000000000081565b6101a3610548565b6101c36101be366004610cd2565b6001805461033490610d05565b80601f016020809104026020016040519081016040528092919081815260200182805461036090610d05565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b505050505081565b63a4420a956000526004601cfd5b33600090815260076020526040902054156103e65763646cf5586000526004601cfd5b60008054604080517f7bfd33bd144b9589a0b3585d6cb96101c2894c984ab9aac14c2b14d4b49b6ee06020820152339181019190915290919061044190606001604051602081830303815290604052805190602001206105da565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104798285888861062e565b6001600160a01b0316146104955763e6c4247b6000526004601cfd5b61049f8683610656565b505050505050565b6002805461033490610d05565b6060600480546104c390610d05565b80601f01602080910402602001604051908101604052809291908181526020018280546104ef90610d05565b801561053c5780601f106105115761010080835404028352916020019161053c565b820191906000526020600020905b81548152906001019060200180831161051f57829003601f168201915b50505050509050919050565b60606003805461055790610d05565b80601f016020809104026020016040519081016040528092919081815260200182805461058390610d05565b80156105d05780601f106105a5576101008083540402835291602001916105d0565b820191906000526020600020905b8154815290600101906020018083116105b357829003601f168201915b5050505050905090565b60006106286105e7610723565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061063f8787878761084a565b9150915061064c8161090e565b5095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081111561068c5763c30436e96000526004601cfd5b6001600160a01b03821660008181526006602090815260408083208054600190810190915583540183558483526005825280832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690941790935533825260079052908120829055819083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a45050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561077c57507f000000000000000000000000000000000000000000000000000000000000000046145b156107a657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156108815750600090506003610905565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156108d5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108fe57600060019250925050610905565b9150600090505b94509492505050565b600081600481111561092257610922610d3f565b0361092a5750565b600181600481111561093e5761093e610d3f565b036109905760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b60028160048111156109a4576109a4610d3f565b036109f15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610987565b6003816004811115610a0557610a05610d3f565b03610a5d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610987565b50565b600060208284031215610a7257600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610aa257600080fd5b9392505050565b600060208083528351808285015260005b81811015610ad657858101830151858201604001528201610aba565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215610b0957600080fd5b5035919050565b80356001600160a01b0381168114610b2757600080fd5b919050565b60008060408385031215610b3f57600080fd5b610b4883610b10565b946020939093013593505050565b600080600060608486031215610b6b57600080fd5b610b7484610b10565b9250610b8260208501610b10565b9150604084013590509250925092565b60008060008060808587031215610ba857600080fd5b610bb185610b10565b93506020850135925060408501359150606085013560ff81168114610bd557600080fd5b939692955090935050565b600060208284031215610bf257600080fd5b610aa282610b10565b60008060408385031215610c0e57600080fd5b610c1783610b10565b915060208301358015158114610c2c57600080fd5b809150509250929050565b600080600080600060808688031215610c4f57600080fd5b610c5886610b10565b9450610c6660208701610b10565b935060408601359250606086013567ffffffffffffffff80821115610c8a57600080fd5b818801915088601f830112610c9e57600080fd5b813581811115610cad57600080fd5b896020828501011115610cbf57600080fd5b9699959850939650602001949392505050565b60008060408385031215610ce557600080fd5b610cee83610b10565b9150610cfc60208401610b10565b90509250929050565b600181811c90821680610d1957607f821691505b602082108103610d3957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000813000a";

type ERC721SoulboundTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721SoulboundTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721SoulboundToken__factory extends ContractFactory {
  constructor(...args: ERC721SoulboundTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721SoulboundToken> {
    return super.deploy(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    ) as Promise<ERC721SoulboundToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC721SoulboundToken {
    return super.attach(address) as ERC721SoulboundToken;
  }
  override connect(signer: Signer): ERC721SoulboundToken__factory {
    return super.connect(signer) as ERC721SoulboundToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721SoulboundTokenInterface {
    return new utils.Interface(_abi) as ERC721SoulboundTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721SoulboundToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721SoulboundToken;
  }
}
