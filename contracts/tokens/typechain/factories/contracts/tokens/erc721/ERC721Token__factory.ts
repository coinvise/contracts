/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721Token,
  ERC721TokenInterface,
} from "../../../../contracts/tokens/erc721/ERC721Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_trustedAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101a0604052600160065533610160523480156200001c57600080fd5b5060405162001ebd38038062001ebd8339810160408190526200003f916200023e565b6040805180820190915260038152620312e360ec1b60208201528690818760006200006b8382620003a1565b5060016200007a8282620003a1565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525081620001205763e6c4247b6000526004601cfd5b60076200012e8582620003a1565b5060086200013d8482620003a1565b506001600160a01b039091166101805261014052506200046d92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018457600080fd5b81516001600160401b0380821115620001a157620001a16200015c565b604051601f8301601f19908116603f01168101908282118183101715620001cc57620001cc6200015c565b81604052838152602092508683858801011115620001e957600080fd5b600091505b838210156200020d5785820183015181830184015290820190620001ee565b600093810190920192909252949350505050565b80516001600160a01b03811681146200023957600080fd5b919050565b60008060008060008060c087890312156200025857600080fd5b86516001600160401b03808211156200027057600080fd5b6200027e8a838b0162000172565b975060208901519150808211156200029557600080fd5b620002a38a838b0162000172565b96506040890151915080821115620002ba57600080fd5b620002c88a838b0162000172565b95506060890151915080821115620002df57600080fd5b50620002ee89828a0162000172565b935050620002ff6080880162000221565b915060a087015190509295509295509295565b600181811c908216806200032757607f821691505b6020821081036200034857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039c57600081815260208120601f850160051c81016020861015620003775750805b601f850160051c820191505b81811015620003985782815560010162000383565b5050505b505050565b81516001600160401b03811115620003bd57620003bd6200015c565b620003d581620003ce845462000312565b846200034e565b602080601f8311600181146200040d5760008415620003f45750858301515b600019600386901b1c1916600185901b17855562000398565b600085815260208120601f198616915b828110156200043e578886015182559484019460019091019084016200041d565b50858210156200045d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516101405161016051610180516119d8620004e560003960006106770152600061024e0152600081816102d60152610d0501526000610fbc0152600061100b01526000610fe601526000610f3f01526000610f6901526000610f9301526119d86000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806375794a3c116100cd578063c6788bdd11610081578063d5abeb0111610066578063d5abeb01146102d1578063e8a3d485146102f8578063e985e9c51461030057600080fd5b8063c6788bdd1461029e578063c87b56dd146102be57600080fd5b806395d89b41116100b257806395d89b4114610270578063a22cb46514610278578063b88d4fde1461028b57600080fd5b806375794a3c146102405780638da5cb5b1461024957600080fd5b806323b872dd1161012457806342842e0e1161010957806342842e0e146101f95780636352211e1461020c57806370a082311461021f57600080fd5b806323b872dd146101d357806337c1e0fe146101e657600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc14610193578063095ea7b3146101be575b600080fd5b610169610164366004611604565b61033c565b60405190151581526020015b60405180910390f35b61018661038e565b604051610175919061166e565b6101a66101a1366004611681565b610420565b6040516001600160a01b039091168152602001610175565b6101d16101cc3660046116b6565b610447565b005b6101d16101e13660046116e0565b61057f565b6101d16101f436600461171c565b6105f6565b6101d16102073660046116e0565b6106d9565b6101a661021a366004611681565b6106f4565b61023261022d36600461176a565b610759565b604051908152602001610175565b61023260065481565b6101a67f000000000000000000000000000000000000000000000000000000000000000081565b6101866107f3565b6101d1610286366004611785565b610802565b6101d16102993660046117d7565b610811565b6102326102ac36600461176a565b60096020526000908152604090205481565b6101866102cc366004611681565b61088f565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b610186610923565b61016961030e3660046118b3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061036d57506001600160e01b03198216635b5e139f60e01b145b8061038857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461039d906118e6565b80601f01602080910402602001604051908101604052809291908181526020018280546103c9906118e6565b80156104165780601f106103eb57610100808354040283529160200191610416565b820191906000526020600020905b8154815290600101906020018083116103f957829003601f168201915b5050505050905090565b600061042b82610932565b506000908152600460205260409020546001600160a01b031690565b6000610452826106f4565b9050806001600160a01b0316836001600160a01b0316036104c45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104fe57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105705760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104bb565b61057a8383610999565b505050565b6105893382610a14565b6105eb5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016104bb565b61057a838383610a93565b33600090815260096020526040902054156106195763646cf5586000526004601cfd5b600654604080517f7bfd33bd144b9589a0b3585d6cb96101c2894c984ab9aac14c2b14d4b49b6ee0602082015233918101919091526000906106739060600160405160208183030381529060405280519060200120610c8d565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106ab82858888610cdb565b6001600160a01b0316146106c75763e6c4247b6000526004601cfd5b6106d18683610d03565b505050505050565b61057a83838360405180602001604052806000815250610811565b6000818152600260205260408120546001600160a01b0316806103885760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104bb565b60006001600160a01b0382166107d75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016104bb565b506001600160a01b031660009081526003602052604090205490565b60606001805461039d906118e6565b61080d338383610d5e565b5050565b61081b3383610a14565b61087d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016104bb565b61088984848484610e2c565b50505050565b60606008805461089e906118e6565b80601f01602080910402602001604051908101604052809291908181526020018280546108ca906118e6565b80156109175780601f106108ec57610100808354040283529160200191610917565b820191906000526020600020905b8154815290600101906020018083116108fa57829003601f168201915b50505050509050919050565b60606007805461039d906118e6565b6000818152600260205260409020546001600160a01b03166109965760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104bb565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906109db826106f4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a20836106f4565b9050806001600160a01b0316846001600160a01b03161480610a6757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a8b5750836001600160a01b0316610a8084610420565b6001600160a01b0316145b949350505050565b826001600160a01b0316610aa6826106f4565b6001600160a01b031614610b0a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104bb565b6001600160a01b038216610b6c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104bb565b610b798383836001610eaa565b826001600160a01b0316610b8c826106f4565b6001600160a01b031614610bf05760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104bb565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610388610c9a610f32565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610cec87878787611059565b91509150610cf98161111d565b5095945050505050565b7f0000000000000000000000000000000000000000000000000000000000000000811115610d395763c30436e96000526004601cfd5b33600090815260096020526040902081905560068054600101905561080d8282611267565b816001600160a01b0316836001600160a01b031603610dbf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104bb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e37848484610a93565b610e4384848484611281565b6108895760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104bb565b6001811115610889576001600160a01b03841615610ef0576001600160a01b03841660009081526003602052604081208054839290610eea908490611936565b90915550505b6001600160a01b03831615610889576001600160a01b03831660009081526003602052604081208054839290610f27908490611949565b909155505050505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f8b57507f000000000000000000000000000000000000000000000000000000000000000046145b15610fb557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110905750600090506003611114565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156110e4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661110d57600060019250925050611114565b9150600090505b94509492505050565b60008160048111156111315761113161195c565b036111395750565b600181600481111561114d5761114d61195c565b0361119a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104bb565b60028160048111156111ae576111ae61195c565b036111fb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104bb565b600381600481111561120f5761120f61195c565b036109965760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104bb565b61080d8282604051806020016040528060008152506113ca565b60006001600160a01b0384163b156113c257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112c5903390899088908890600401611972565b6020604051808303816000875af1925050508015611300575060408051601f3d908101601f191682019092526112fd918101906119ae565b60015b6113a8573d80801561132e576040519150601f19603f3d011682016040523d82523d6000602084013e611333565b606091505b5080516000036113a05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104bb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a8b565b506001610a8b565b6113d48383611448565b6113e16000848484611281565b61057a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104bb565b6001600160a01b03821661149e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104bb565b6000818152600260205260409020546001600160a01b0316156115035760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104bb565b611511600083836001610eaa565b6000818152600260205260409020546001600160a01b0316156115765760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104bb565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461099657600080fd5b60006020828403121561161657600080fd5b8135611621816115ee565b9392505050565b6000815180845260005b8181101561164e57602081850181015186830182015201611632565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116216020830184611628565b60006020828403121561169357600080fd5b5035919050565b80356001600160a01b03811681146116b157600080fd5b919050565b600080604083850312156116c957600080fd5b6116d28361169a565b946020939093013593505050565b6000806000606084860312156116f557600080fd5b6116fe8461169a565b925061170c6020850161169a565b9150604084013590509250925092565b6000806000806080858703121561173257600080fd5b61173b8561169a565b93506020850135925060408501359150606085013560ff8116811461175f57600080fd5b939692955090935050565b60006020828403121561177c57600080fd5b6116218261169a565b6000806040838503121561179857600080fd5b6117a18361169a565b9150602083013580151581146117b657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156117ed57600080fd5b6117f68561169a565b93506118046020860161169a565b925060408501359150606085013567ffffffffffffffff8082111561182857600080fd5b818701915087601f83011261183c57600080fd5b81358181111561184e5761184e6117c1565b604051601f8201601f19908116603f01168101908382118183101715611876576118766117c1565b816040528281528a602084870101111561188f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156118c657600080fd5b6118cf8361169a565b91506118dd6020840161169a565b90509250929050565b600181811c908216806118fa57607f821691505b60208210810361191a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561038857610388611920565b8082018082111561038857610388611920565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526119a46080830184611628565b9695505050505050565b6000602082840312156119c057600080fd5b8151611621816115ee56fea164736f6c6343000813000a";

type ERC721TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Token__factory extends ContractFactory {
  constructor(...args: ERC721TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Token> {
    return super.deploy(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    ) as Promise<ERC721Token>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    contractURI_: PromiseOrValue<string>,
    tokenURI_: PromiseOrValue<string>,
    _trustedAddress: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      contractURI_,
      tokenURI_,
      _trustedAddress,
      _maxSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Token {
    return super.attach(address) as ERC721Token;
  }
  override connect(signer: Signer): ERC721Token__factory {
    return super.connect(signer) as ERC721Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenInterface {
    return new utils.Interface(_abi) as ERC721TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Token {
    return new Contract(address, _abi, signerOrProvider) as ERC721Token;
  }
}
