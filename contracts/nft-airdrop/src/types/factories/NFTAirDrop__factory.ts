/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTAirDrop, NFTAirDropInterface } from "../NFTAirDrop";

const _abi = [
  {
    inputs: [],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRecipients",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC1155",
        name: "erc1155",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "multiSendERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "erc721",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "multiSendERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105e2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a3c33a0f1461003b578063eb022b1514610050575b600080fd5b61004e61004936600461048f565b610063565b005b61004e61005e36600461053c565b610280565b84610081576040516348e0555160e11b815260040160405180910390fd5b84831415806100905750848114155b156100c7576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808c0282810182019093528b825296975091959194508a935089925082918501908490808284376000920182905250604080516020808b0282810182019093528a82529697509195919450899350889250829185019084908082843760009201829052508751949550925050505b81811015610272578b6001600160a01b031663f242432a33878481518110610196576101966105bf565b60200260200101518785815181106101b0576101b06105bf565b60200260200101518786815181106101ca576101ca6105bf565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b0394851660048201529390921660248401526044830152606482015260a06084820152600060a482015260c401600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b5050505080600101905061016c565b505050505050505050505050565b8261029e576040516348e0555160e11b815260040160405180910390fd5b8281146102d7576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808a0282810182019093528982529697509195919450889350879250829185019084908082843760009201829052508651949550925050505b8181101561042057886001600160a01b03166342842e0e33868481518110610371576103716105bf565b602002602001015186858151811061038b5761038b6105bf565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156103fd57600080fd5b505af1158015610411573d6000803e3d6000fd5b50505050806001019050610347565b505050505050505050565b6001600160a01b038116811461044057600080fd5b50565b60008083601f84011261045557600080fd5b50813567ffffffffffffffff81111561046d57600080fd5b6020830191508360208260051b850101111561048857600080fd5b9250929050565b60008060008060008060006080888a0312156104aa57600080fd5b87356104b58161042b565b9650602088013567ffffffffffffffff808211156104d257600080fd5b6104de8b838c01610443565b909850965060408a01359150808211156104f757600080fd5b6105038b838c01610443565b909650945060608a013591508082111561051c57600080fd5b506105298a828b01610443565b989b979a50959850939692959293505050565b60008060008060006060868803121561055457600080fd5b853561055f8161042b565b9450602086013567ffffffffffffffff8082111561057c57600080fd5b61058889838a01610443565b909650945060408801359150808211156105a157600080fd5b506105ae88828901610443565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000809000a";

type NFTAirDropConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: NFTAirDropConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class NFTAirDrop__factory extends ContractFactory {
  constructor(...args: NFTAirDropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<NFTAirDrop> {
    return super.deploy(overrides || {}) as Promise<NFTAirDrop>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTAirDrop {
    return super.attach(address) as NFTAirDrop;
  }
  connect(signer: Signer): NFTAirDrop__factory {
    return super.connect(signer) as NFTAirDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTAirDropInterface {
    return new utils.Interface(_abi) as NFTAirDropInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTAirDrop {
    return new Contract(address, _abi, signerOrProvider) as NFTAirDrop;
  }
}
