/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface NFTAirDropInterface extends ethers.utils.Interface {
  functions: {
    "multiSendERC1155(address,address[],uint256[],uint256[])": FunctionFragment;
    "multiSendERC721(address,address[],uint256[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "multiSendERC1155",
    values: [string, string[], BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(functionFragment: "multiSendERC721", values: [string, string[], BigNumberish[]]): string;

  decodeFunctionResult(functionFragment: "multiSendERC1155", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "multiSendERC721", data: BytesLike): Result;

  events: {};
}

export interface NFTAirDrop extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: NFTAirDropInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    multiSendERC1155(
      erc1155: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    multiSendERC721(
      erc721: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;
  };

  multiSendERC1155(
    erc1155: string,
    recipients: string[],
    tokenIds: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  multiSendERC721(
    erc721: string,
    recipients: string[],
    tokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  callStatic: {
    multiSendERC1155(
      erc1155: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    multiSendERC721(
      erc721: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    multiSendERC1155(
      erc1155: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    multiSendERC721(
      erc721: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    multiSendERC1155(
      erc1155: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    multiSendERC721(
      erc721: string,
      recipients: string[],
      tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;
  };
}
